{
    "swagger": "2.0",
    "info": {
        "title": "Musement API",
        "description": "Musement API",
        "termsOfService": "https://www.musement.com/",
        "contact": {
            "email": "api-support@musement.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "3.3.2"
    },
    "host": "developers.musement.com",
    "basePath": "/api/v3",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json",
        "application/xml"
    ],
    "produces": [
        "application/json",
        "application/xml"
    ],
    "paths": {
        "/activities": {
            "get": {
                "tags": [
                    "search",
                    "activity"
                ],
                "summary": "Activities search entrypoint",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/text"
                    },
                    {
                        "$ref": "#/parameters/text_operator"
                    },
                    {
                        "$ref": "#/parameters/extend_other_languages"
                    },
                    {
                        "$ref": "#/parameters/extend_content_fields"
                    },
                    {
                        "$ref": "#/parameters/fuzziness_level"
                    },
                    {
                        "$ref": "#/parameters/zero_terms_query"
                    },
                    {
                        "$ref": "#/parameters/sort_by"
                    },
                    {
                        "name": "category_in",
                        "in": "query",
                        "description": "Filter, include only results from given categories identified by a collection of literal codes",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "$ref": "#/parameters/city_in"
                    },
                    {
                        "$ref": "#/parameters/coordinates"
                    },
                    {
                        "name": "country_in",
                        "in": "query",
                        "description": "Filter, include only results from given countries identified by a collection of 2 chars country code",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "$ref": "#/parameters/default_price_range"
                    },
                    {
                        "$ref": "#/parameters/distance"
                    },
                    {
                        "$ref": "#/parameters/feature_in"
                    },
                    {
                        "name": "temporary",
                        "in": "query",
                        "description": "Filter, include results on an temporary flag basis. Accepted values: YES or NOT",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/venue_in"
                    },
                    {
                        "name": "vertical_in",
                        "in": "query",
                        "description": "Filter, include only results from given verticals identified by a collection of literal codes",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful, and in case of empty results",
                        "schema": {
                            "$ref": "#/definitions/ActivitySearchResult"
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    }
                }
            },
            "post": {
                "tags": [
                    "activity"
                ],
                "summary": "Create an activity",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "PostActivity",
                        "in": "body",
                        "description": "Activity post request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostActivity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    }
                }
            }
        },
        "/activities-related": {
            "get": {
                "tags": [
                    "search",
                    "activity"
                ],
                "summary": "Activities related search entrypoint",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/text"
                    },
                    {
                        "$ref": "#/parameters/text_operator"
                    },
                    {
                        "$ref": "#/parameters/extend_other_languages"
                    },
                    {
                        "$ref": "#/parameters/extend_content_fields"
                    },
                    {
                        "$ref": "#/parameters/fuzziness_level"
                    },
                    {
                        "$ref": "#/parameters/zero_terms_query"
                    },
                    {
                        "$ref": "#/parameters/sort_by"
                    },
                    {
                        "$ref": "#/parameters/coordinates"
                    },
                    {
                        "$ref": "#/parameters/minimum_events"
                    },
                    {
                        "$ref": "#/parameters/city_limit"
                    },
                    {
                        "$ref": "#/parameters/city_offset"
                    },
                    {
                        "$ref": "#/parameters/list_limit"
                    },
                    {
                        "$ref": "#/parameters/list_offset"
                    },
                    {
                        "$ref": "#/parameters/venue_limit"
                    },
                    {
                        "$ref": "#/parameters/venue_offset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful, and in case of empty results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityRelatedResult"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/dates": {
            "get": {
                "tags": [
                    "date"
                ],
                "summary": "Get available dates for an event",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Start date | If not specified set to today | Use format: YYYY-MM-DD",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "To date | If not specified set to next year | Use format: YYYY-MM-DD",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Date"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activity-taxonomies/{activityTaxonomyType}": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Get all taxonomies for the required type",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "activityTaxonomyType",
                        "in": "path",
                        "description": "Activity taxonomy type",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "highlights",
                            "inclusions",
                            "exclusions"
                        ]
                    },
                    {
                        "name": "taxonomy_category_code",
                        "in": "query",
                        "description": "Taxonomy category code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ActivityTaxonomy"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/ticket-codes/{priceTagFeature}/{priceTagHolder}": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Get available ticket code for an event",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "priceTagFeature",
                        "in": "path",
                        "description": "PriceTag feature code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "priceTagHolder",
                        "in": "path",
                        "description": "PriceTag holder code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "post": {
                "tags": [
                    "activity"
                ],
                "summary": "Add new ticket codes too an event",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "priceTagFeature",
                        "in": "path",
                        "description": "PriceTag feature code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "priceTagHolder",
                        "in": "path",
                        "description": "PriceTag holder code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/ticket-codes/{priceTagFeature}/{priceTagHolder}/{code}": {
            "patch": {
                "tags": [
                    "activity"
                ],
                "summary": "Update selected ticket code",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "priceTagFeature",
                        "in": "path",
                        "description": "PriceTag feature code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "priceTagHolder",
                        "in": "path",
                        "description": "PriceTag holder code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Ticket code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/dates/{day}/timeslots/{time}": {
            "get": {
                "tags": [
                    "timeslot"
                ],
                "summary": "Get data for a timeslot",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Timeslot"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "403": {
                        "description": "Returned when you cannot access the resource"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "patch": {
                "tags": [
                    "timeslot"
                ],
                "summary": "Update data for a timeslot",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/time"
                    },
                    {
                        "name": "PatchTimeslot",
                        "in": "body",
                        "description": "Timeslot patch request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatchTimeslot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Timeslot"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "403": {
                        "description": "Returned when you don't have permissions"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/dates/{day}/timeslots": {
            "post": {
                "tags": [
                    "timeslot"
                ],
                "summary": "Add a timeslot",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "name": "PostTimeslot",
                        "in": "body",
                        "description": "Timeslot post request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostTimeslot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Timeslot"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "403": {
                        "description": "Returned when you don't have permissions"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/dates/{day}/timeslots/{time}/{pricetagCode}": {
            "get": {
                "tags": [
                    "timeslot"
                ],
                "summary": "Get data for a product of a timeslot",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/time"
                    },
                    {
                        "$ref": "#/parameters/pricetagCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/TimeslotProduct"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "403": {
                        "description": "Returned when you cannot access the resource"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "put": {
                "tags": [
                    "timeslot"
                ],
                "summary": "Update data of a product for a specific timeslot",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/time"
                    },
                    {
                        "$ref": "#/parameters/pricetagCode"
                    },
                    {
                        "name": "PutTimeslotProduct",
                        "in": "body",
                        "description": "Timeslot product patch request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PutTimeslotProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/TimeslotProduct"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "403": {
                        "description": "Returned when you don't have permissions"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/affiliates/{affiliateCode}": {
            "get": {
                "tags": [
                    "affiliate"
                ],
                "summary": "Get an affiliate by code",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "affiliateCode",
                        "in": "path",
                        "description": "Affiliate code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Affiliate"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/autocomplete": {
            "get": {
                "tags": [
                    "Autocomplete"
                ],
                "summary": "Get autocompletion suggestions for textual search",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/sort_by"
                    },
                    {
                        "$ref": "#/parameters/coordinates"
                    },
                    {
                        "$ref": "#/parameters/text"
                    },
                    {
                        "$ref": "#/parameters/activity_limit"
                    },
                    {
                        "$ref": "#/parameters/activity_offset"
                    },
                    {
                        "$ref": "#/parameters/blog_post_limit"
                    },
                    {
                        "$ref": "#/parameters/blog_post_offset"
                    },
                    {
                        "$ref": "#/parameters/category_limit"
                    },
                    {
                        "$ref": "#/parameters/category_offset"
                    },
                    {
                        "$ref": "#/parameters/city_limit"
                    },
                    {
                        "$ref": "#/parameters/city_offset"
                    },
                    {
                        "$ref": "#/parameters/list_limit"
                    },
                    {
                        "$ref": "#/parameters/list_offset"
                    },
                    {
                        "$ref": "#/parameters/venue_limit"
                    },
                    {
                        "$ref": "#/parameters/venue_offset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AutocompleteResult"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/backgrounds": {
            "get": {
                "tags": [
                    "background"
                ],
                "summary": "Get backgrounds media",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Background"
                            }
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/blogposts-categories": {
            "get": {
                "tags": [
                    "blog"
                ],
                "summary": "Get all available blogpost categories",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BlogpostCategoryAggregated"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/blogposts-categories/{id}": {
            "get": {
                "tags": [
                    "blog"
                ],
                "summary": "Get a specific blogpost category",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category identifier",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/BlogpostCategory"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/blogposts/{id}": {
            "get": {
                "tags": [
                    "blog"
                ],
                "summary": "Get blogpost by identifier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blogpost unique identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Blogpost"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/blogposts/{id}/{position}": {
            "get": {
                "tags": [
                    "blog"
                ],
                "summary": "Get previous o next blogposts",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blogpost unique identifier",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "position",
                        "in": "path",
                        "description": "Indicate if you want the prev or the next post",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "prev",
                            "next"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Blogpost"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/blogposts": {
            "get": {
                "tags": [
                    "blog"
                ],
                "summary": "Get a blogposts",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "blogpost_category",
                        "in": "query",
                        "description": "The blog post category uuid to filter by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "home_page_featured",
                        "in": "query",
                        "description": "If true will include only home page featured posts",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "$ref": "#/parameters/category"
                    },
                    {
                        "$ref": "#/parameters/vertical"
                    },
                    {
                        "name": "list",
                        "in": "query",
                        "description": "List identifier to filter by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City identifier to filter by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/venue"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page from which starting to return found events (mandatory if limit is given)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Ordering criteria: [publish_date|relevance], prepend `-` for descending order",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Blogpost"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}": {
            "get": {
                "tags": [
                    "cart"
                ],
                "summary": "Get a cart by unique identifier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "put": {
                "tags": [
                    "cart"
                ],
                "summary": "Replace a Cart",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "name": "cart",
                        "in": "body",
                        "description": "Cart request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "patch": {
                "tags": [
                    "cart"
                ],
                "summary": "Update a cart",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "name": "cart",
                        "in": "body",
                        "description": "Cart request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}/form": {
            "get": {
                "tags": [
                    "cart"
                ],
                "summary": "Get the form associated to a cart",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/CheckoutForm"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartId}/bundles": {
            "get": {
                "tags": [
                    "cart"
                ],
                "summary": "Get the bundle in a cart",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cartId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Bundle"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts": {
            "post": {
                "tags": [
                    "cart"
                ],
                "summary": "Create a cart",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "name": "cart",
                        "in": "body",
                        "description": "Cart request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}/tickets": {
            "post": {
                "tags": [
                    "cart"
                ],
                "summary": "Add tickets to a cart | Deprecated infavour of POST /carts/{cartUuid}/items",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                },
                "deprecated": true
            }
        },
        "/carts/{cartUuid}/promo-intent": {
            "post": {
                "tags": [
                    "cart"
                ],
                "summary": "Generate a promo intent",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "name": "promo-intent",
                        "in": "body",
                        "description": "Promo intent data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostPromoIntent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/PromoIntent"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}/customer": {
            "patch": {
                "tags": [
                    "guest-customer"
                ],
                "summary": "Patch cart customer data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "name": "PatchCustomerGuestCart",
                        "in": "body",
                        "description": "Customer data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatchCustomerGuestCart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}/items": {
            "post": {
                "tags": [
                    "cart"
                ],
                "summary": "Add an items to a cart",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "name": "cart",
                        "in": "body",
                        "description": "Product request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostCartItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/CartItem"
                        }
                    },
                    "401": {
                        "description": "Returned when something"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}/items/{cartItemUuid}/passengers/form": {
            "get": {
                "tags": [
                    "passengers-info"
                ],
                "summary": "Get passengers info",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "$ref": "#/parameters/cartItemUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/passengersInfoForm"
                        }
                    },
                    "400": {
                        "description": "Returned when data are contains some error"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}/items/{cartItemUuid}/passengers/{passengerNumber}": {
            "put": {
                "tags": [
                    "passengers-info"
                ],
                "summary": "Set passengers info for an item",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "$ref": "#/parameters/cartItemUuid"
                    },
                    {
                        "$ref": "#/parameters/passengerNumber"
                    },
                    {
                        "name": "passengerInfo",
                        "in": "body",
                        "description": "Passenger info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FormFieldValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FormFieldValue"
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when data are contains some error"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}/extra-customer-info": {
            "get": {
                "tags": [
                    "extra-customer-info"
                ],
                "summary": "Get extra customer info for a cart",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "$ref": "#/parameters/cartItemUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FormFieldDefinition"
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when data are contains some error"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "put": {
                "tags": [
                    "extra-customer-info"
                ],
                "summary": "Set extra customer info for an item",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "$ref": "#/parameters/cartItemUuid"
                    },
                    {
                        "name": "extraCustomerData",
                        "in": "body",
                        "description": "Extra customer data",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FormFieldValue"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FormFieldValue"
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when data are contains some error"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/categories/{categoryId}": {
            "get": {
                "tags": [
                    "category"
                ],
                "summary": "Get a category by identifier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/categoryId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "category"
                ],
                "summary": "Get categories",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page from which starting to return found events (mandatory if limit is given)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Ordering criteria: [relevance|city_relevance|discount], prepend `-` for descending order",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filtering_aware",
                        "in": "query",
                        "description": "If true the category is usable as filter",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/categories/{categoryId}/activities": {
            "get": {
                "tags": [
                    "category"
                ],
                "summary": "Get activities for a category",
                "description": "Get all activities for a category sorted by category relevance. Only the activities that have at least one active date in the period specified between date_from and date_to are returned. If date_from and date_to are not set then the period that will be set will be one year from the date of the request'",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/categoryId"
                    },
                    {
                        "$ref": "#/parameters/vertical"
                    },
                    {
                        "$ref": "#/parameters/city"
                    },
                    {
                        "$ref": "#/parameters/venue"
                    },
                    {
                        "$ref": "#/parameters/editorial-category"
                    },
                    {
                        "$ref": "#/parameters/date_from"
                    },
                    {
                        "$ref": "#/parameters/date_to"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sorting strategy",
                        "required": false,
                        "type": "string",
                        "default": "venue-relevance",
                        "enum": [
                            "relevance",
                            "venue-relevance",
                            "category-relevance",
                            "price",
                            "rating"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get city by unique identifier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get cities",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "prioritized_country",
                        "in": "query",
                        "description": "Set the country to prioritize (id) (will affect results order)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "prioritized_country_cities_limit",
                        "in": "query",
                        "description": "Set the number of cities to select from the country given in prioritized_country, if not given means unlimited",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Set sorting strategy",
                        "required": false,
                        "type": "string",
                        "default": "weight",
                        "enum": [
                            "none",
                            "weight"
                        ]
                    },
                    {
                        "name": "without_events",
                        "in": "query",
                        "description": "Set to 'yes' return all cities otherwise only those with events",
                        "required": false,
                        "type": "string",
                        "default": "no",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CityAggregated"
                            }
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}/lists": {
            "get": {
                "tags": [
                    "City",
                    "List"
                ],
                "summary": "Get lists for a city",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Device-Type"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    },
                    {
                        "$ref": "#/parameters/vertical"
                    },
                    {
                        "$ref": "#/parameters/exclude_not_tagged"
                    },
                    {
                        "$ref": "#/parameters/listtypes"
                    },
                    {
                        "$ref": "#/parameters/listtags"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MusementList"
                            }
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}/verticals": {
            "get": {
                "tags": [
                    "city",
                    "vertical"
                ],
                "summary": "Get all verticals for a city",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vertical"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}/activities": {
            "get": {
                "tags": [
                    "city",
                    "activity"
                ],
                "summary": "Get all activities for a city",
                "description": "Get all activities for an city. Only the activities that have at least one active date in the period specified between date_from and date_to are returned. If date_from and date_to are not set then the period that will be set will be one year from the date of the request'",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    },
                    {
                        "$ref": "#/parameters/vertical"
                    },
                    {
                        "$ref": "#/parameters/category"
                    },
                    {
                        "$ref": "#/parameters/venue"
                    },
                    {
                        "$ref": "#/parameters/editorial-category"
                    },
                    {
                        "$ref": "#/parameters/date_from"
                    },
                    {
                        "$ref": "#/parameters/date_to"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sorting strategy",
                        "required": false,
                        "type": "string",
                        "default": "venue-relevance",
                        "enum": [
                            "relevance",
                            "venue-relevance",
                            "category-relevance",
                            "price",
                            "rating"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}/activities/{happening}": {
            "get": {
                "tags": [
                    "city",
                    "activity"
                ],
                "summary": "Get activities happening that can be booked for today or for tomorrow",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "happening",
                        "in": "path",
                        "description": "Events for today or tomorrow ?",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "today",
                            "tomorrow"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}/venues": {
            "get": {
                "tags": [
                    "city",
                    "venue"
                ],
                "summary": "Get all venues for a city",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/vertical"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Venue"
                            }
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}/categories": {
            "get": {
                "tags": [
                    "city",
                    "category"
                ],
                "summary": "Categories for the city. Sorted by the number of events for the category",
                "description": "Categories for the city. Sorted by the number of activities for the category",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}/verticals/{verticalId}/categories": {
            "get": {
                "tags": [
                    "city",
                    "category"
                ],
                "summary": "Categories for the city for a specific vertical. Sorted by the number of activities for the category",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    },
                    {
                        "$ref": "#/parameters/verticalId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryAggregated"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}/blogposts": {
            "get": {
                "tags": [
                    "city",
                    "blog"
                ],
                "summary": "Get the blogposts for the city",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Blogpost"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/cities/{cityId}/regions": {
            "get": {
                "summary": "Get the regions for the city",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/cityId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Region"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/venues/{venueId}/comments": {
            "get": {
                "tags": [
                    "venue",
                    "comment"
                ],
                "summary": "Get all comments for an venue",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/venueId"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/min_rating"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Comment"
                            }
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/comments": {
            "get": {
                "tags": [
                    "activity",
                    "comment"
                ],
                "summary": "Get all comments for the activity",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/min_rating"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Comment"
                            }
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/content-managers/me": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Get logged content manager data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ContentManager"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/countries/{countryId}": {
            "get": {
                "tags": [
                    "country"
                ],
                "summary": "Get country by unique identifier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "Country identifier",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "country"
                ],
                "summary": "Get all countries",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Country"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/countries/{countryId}/cities": {
            "get": {
                "tags": [
                    "country",
                    "city"
                ],
                "summary": "Get all cities for a country",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/countryId"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CityAggregated"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/countries/{countryId}/activities": {
            "get": {
                "tags": [
                    "country",
                    "activity"
                ],
                "summary": "Get all activities for a country",
                "description": "Get all events for a country sorted by relevance. If priority_city is specified the event for that city are returned first'",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/countryId"
                    },
                    {
                        "$ref": "#/parameters/vertical"
                    },
                    {
                        "name": "priority_city",
                        "in": "query",
                        "description": "Prioritize results that belong to this city",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/currencies": {
            "get": {
                "tags": [
                    "global"
                ],
                "summary": "Get all available currencies",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Currency"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/customers/me": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Get logged user data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    }
                },
                "security": [
                    {
                        "customer_oauth": [
                            "customer:read"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "customer"
                ],
                "summary": "Update customer data. Set to empty not specified data",
                "description": "All data must be sent. Empty field will be cleared",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "customer",
                        "in": "body",
                        "description": "Customer put request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PutCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    },
                    "400": {
                        "description": "Returned on error"
                    }
                },
                "security": [
                    {
                        "customer_oauth": [
                            "customer:read",
                            "customer:update"
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "customer"
                ],
                "summary": "Update customer data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "customer",
                        "in": "body",
                        "description": "Customer patch request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatchCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    },
                    "400": {
                        "description": "Returned on error"
                    }
                },
                "security": [
                    {
                        "customer_oauth": [
                            "customer:read",
                            "customer:update"
                        ]
                    }
                ]
            }
        },
        "/customers/me/orders": {
            "get": {
                "tags": [
                    "order",
                    "customer"
                ],
                "summary": "Get all orders for customer",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                },
                "security": [
                    {
                        "customer_oauth": [
                            "customer:read"
                        ]
                    }
                ]
            }
        },
        "/customers/me/comments": {
            "get": {
                "tags": [
                    "comment",
                    "customer"
                ],
                "summary": "Get all comments for the customer",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                },
                "security": [
                    {
                        "customer_oauth": [
                            "customer:read"
                        ]
                    }
                ]
            }
        },
        "/customers/me/preferences": {
            "get": {
                "tags": [
                    "customer_preferences"
                ],
                "summary": "Get preferences for logged in customer",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/CustomerPreferences"
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable",
                        "schema": {
                            "$ref": "#/definitions/ExceptionResponse"
                        }
                    }
                },
                "security": [
                    {
                        "customer_oauth": [
                            "customer:read"
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "customer_preferences"
                ],
                "summary": "Update customer preferences data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "customer_preference",
                        "in": "body",
                        "description": "Customer preference data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatchCustomerPreferences"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/CustomerPreferences"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable",
                        "schema": {
                            "$ref": "#/definitions/ExceptionResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when the client is unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ExceptionResponse"
                        }
                    },
                    "400": {
                        "description": "Returned if data in the payload contain errors.",
                        "schema": {
                            "$ref": "#/definitions/FormError"
                        }
                    }
                },
                "security": [
                    {
                        "customer_oauth": [
                            "customer:read",
                            "customer:update"
                        ]
                    }
                ]
            }
        },
        "/destinations": {
            "get": {
                "tags": [
                    "destination"
                ],
                "summary": "Get destinations",
                "parameters": [
                    {
                        "$ref": "#/parameters/category_in"
                    },
                    {
                        "$ref": "#/parameters/vertical_in"
                    },
                    {
                        "$ref": "#/parameters/city_in"
                    },
                    {
                        "$ref": "#/parameters/max_distance"
                    },
                    {
                        "$ref": "#/parameters/max_distance_from_city"
                    },
                    {
                        "$ref": "#/parameters/now_open"
                    },
                    {
                        "$ref": "#/parameters/sort_by"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Destination"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/destinations/{destinationId}": {
            "get": {
                "tags": [
                    "destination"
                ],
                "summary": "Get one destination",
                "parameters": [
                    {
                        "$ref": "#/parameters/destinationId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Destination"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/editorial-categories/{editorialcategoryId}": {
            "get": {
                "tags": [
                    "editorial-category"
                ],
                "summary": "Get an editorial category by ID",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/editorialcategoryId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/EditorialCategory"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/editorial-categories": {
            "get": {
                "tags": [
                    "editorial-category"
                ],
                "summary": "Get all editorial categories",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EditorialCategory"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/editorial-categories/{editorialcategoryId}/activities": {
            "get": {
                "tags": [
                    "editorial-category",
                    "activity"
                ],
                "summary": "Get all activities for an editorial category.",
                "description": "Get all activities for an editorial category sorted by relevance. Only the events that have at least one active date in the period specified between date_from and date_to are returned. If date_from and date_to are not set then the period that will be set will be one year from the date of the request'",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/editorialcategoryId"
                    },
                    {
                        "$ref": "#/parameters/vertical"
                    },
                    {
                        "$ref": "#/parameters/city"
                    },
                    {
                        "$ref": "#/parameters/category"
                    },
                    {
                        "$ref": "#/parameters/venue"
                    },
                    {
                        "$ref": "#/parameters/date_from"
                    },
                    {
                        "$ref": "#/parameters/date_to"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sorting strategy",
                        "required": false,
                        "type": "string",
                        "default": "relevance",
                        "enum": [
                            "relevance",
                            "price",
                            "rating"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/editorial-categories/{editorialcategoryId}/flavours": {
            "get": {
                "tags": [
                    "editorial-category"
                ],
                "summary": "Get all flavours connected to an editorial category",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/editorialcategoryId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Flavour"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/events/search": {
            "get": {
                "tags": [
                    "deprecated",
                    "activity"
                ],
                "summary": "Deprecated API for search - Use GET /activities",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    }
                },
                "deprecated": true
            }
        },
        "/events/search-extended": {
            "get": {
                "tags": [
                    "deprecated",
                    "activity"
                ],
                "summary": "Deprecated API for search. Use GET /activities",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Query String",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/date_from"
                    },
                    {
                        "$ref": "#/parameters/date_to"
                    },
                    {
                        "$ref": "#/parameters/vertical_collection"
                    },
                    {
                        "$ref": "#/parameters/category_collection"
                    },
                    {
                        "$ref": "#/parameters/country_collection"
                    },
                    {
                        "$ref": "#/parameters/city_collection"
                    },
                    {
                        "name": "minPrice",
                        "in": "query",
                        "description": "Minimum price for an event to be considered",
                        "required": false,
                        "type": "string",
                        "minimum": 0
                    },
                    {
                        "name": "maxPrice",
                        "in": "query",
                        "description": "Maximum price for an event to be considered",
                        "required": false,
                        "type": "string",
                        "minimum": 1
                    },
                    {
                        "name": "topFeature",
                        "in": "query",
                        "description": "Query String",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting strategy",
                        "required": false,
                        "type": "string",
                        "default": "relevance",
                        "enum": [
                            "relevance",
                            "venue-relevance",
                            "city-relevance",
                            "category-relevance",
                            "price",
                            "rating"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/SearchResponse"
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    }
                },
                "deprecated": true
            }
        },
        "/activities/{activityUuid}": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Get an activity by unique identifier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "patch": {
                "tags": [
                    "activity"
                ],
                "summary": "Update an activity",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "PatchActivity",
                        "in": "body",
                        "description": "Activity patch request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatchActivity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "404": {
                        "description": "Returned if the activity doesn't exist"
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    }
                }
            }
        },
        "/activities/{activityUuid}/contents/{localeCode}": {
            "get": {
                "tags": [
                    "activity",
                    "content"
                ],
                "summary": "Get activity content for a specific locale",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "$ref": "#/parameters/localeCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ActivityContent"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/contact-form": {
            "get": {
                "tags": [
                    "contact-form"
                ],
                "summary": "Get activity's contact form",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/contact-requests": {
            "post": {
                "tags": [
                    "contact-form"
                ],
                "summary": "Send a contact request for the activity.",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "400": {
                        "description": "Returned when the form has errors"
                    }
                }
            }
        },
        "/activities/{activityUuid}/bundles": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Get bundles related to the activity",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Bundle"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/related-activities": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Get related activities",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no related activities are found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/dates/{day}": {
            "get": {
                "tags": [
                    "date"
                ],
                "summary": "Get schedule for a day for an event",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "name": "tickets_number",
                        "in": "query",
                        "description": "Number of ticket requested tickets | Only useful for real time activities",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schedule"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/events/{eventId}/schedule/{day}/{giftCode}": {
            "get": {
                "tags": [
                    "gift"
                ],
                "summary": "Get schedule for Gift and specific day",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/eventId"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/giftCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schedule"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/events/{eventId}/gift-schedule": {
            "get": {
                "tags": [
                    "date",
                    "gift"
                ],
                "summary": "Get schedule for a 'Gift creation' for an Event",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/eventId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/GiftSchedule"
                        }
                    },
                    "404": {
                        "description": "Returned when Event is not found or is not giftable"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Get events",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Given events will always be returned (will not help achieve the limit quota)",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "id_in",
                        "in": "query",
                        "description": "Filter, include only results having the given ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "country_in",
                        "in": "query",
                        "description": "Filter, include only results from given countries identified by a collection of ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "not_country_in",
                        "in": "query",
                        "description": "Filter, exclude results from given countries identified by a collection of ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "$ref": "#/parameters/city_in"
                    },
                    {
                        "$ref": "#/parameters/not_city_in"
                    },
                    {
                        "$ref": "#/parameters/category_in"
                    },
                    {
                        "$ref": "#/parameters/vertical_in"
                    },
                    {
                        "name": "discounted",
                        "in": "query",
                        "description": "Filter, include results that have a discount greater than 0",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/temporary"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/sort_by"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/media": {
            "get": {
                "tags": [
                    "media"
                ],
                "summary": "Get all media for an activity. Media are both images and videos",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GalleryMedia"
                            }
                        }
                    },
                    "404": {
                        "description": "No media found for the activity"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            },
            "post": {
                "tags": [
                    "media"
                ],
                "summary": "Add a media to an activity",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "PostActivityMedia",
                        "in": "body",
                        "description": "Media information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostActivityMedia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/GalleryMedia"
                        }
                    },
                    "404": {
                        "description": "No media found for the activity"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/languages": {
            "get": {
                "tags": [
                    "media"
                ],
                "summary": "Get all languages for an activity.",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "404": {
                        "description": "No languages found for the activity"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/activities/{activityUuid}/contents": {
            "post": {
                "tags": [
                    "content"
                ],
                "summary": "Add content for an activity",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "activity-content",
                        "in": "body",
                        "description": "Activity content post request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostActivityContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ActivityContent"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    }
                }
            }
        },
        "/activities/{activityUuid}/blackout-days": {
            "post": {
                "tags": [
                    "date"
                ],
                "summary": "Add a blackout day",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "blackout-day",
                        "in": "body",
                        "description": "Day to add to the blackout one",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostActivityBlackoutDay"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/BlackoutDay"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    }
                }
            }
        },
        "/activities/{activityUuid}/contents/{locale}": {
            "put": {
                "tags": [
                    "content"
                ],
                "summary": "Update a content for an activity",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "activity-content",
                        "in": "body",
                        "description": "Activity content put request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PutActivityContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ActivityContent"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    }
                }
            }
        },
        "/activities/{activityUuid}/itineraries": {
            "get": {
                "tags": [
                    "itinerary"
                ],
                "summary": "Get all itineraries for an activity",
                "parameters": [
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ActivityItinerary"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    },
                    "400": {
                        "description": "Returned on error"
                    }
                }
            },
            "post": {
                "tags": [
                    "itinerary"
                ],
                "summary": "Add an itinerary to an activity",
                "parameters": [
                    {
                        "name": "itinerary",
                        "in": "body",
                        "description": "Activity itinerary post request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostActivityItinerary"
                        }
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ActivityItinerary"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    }
                }
            }
        },
        "/activities/{activityUuid}/timed-seasons": {
            "post": {
                "tags": [
                    "date"
                ],
                "summary": "Add a season to an activity",
                "parameters": [
                    {
                        "name": "season",
                        "in": "body",
                        "description": "Activity season",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostTimedSeason"
                        }
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ActivityCalendarUpdateRequest"
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    },
                    "400": {
                        "description": "Returned on error"
                    }
                }
            }
        },
        "/activities/{activityUuid}/open-seasons": {
            "post": {
                "tags": [
                    "date"
                ],
                "summary": "Add an open season to an activity",
                "parameters": [
                    {
                        "name": "open-season",
                        "in": "body",
                        "description": "Open season",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostActivityOpenSeason"
                        }
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ActivityCalendarUpdateRequest"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned on error"
                    }
                }
            }
        },
        "/external-links/{externalLinkId}": {
            "get": {
                "tags": [
                    "ExternalLink"
                ],
                "summary": "Get an external link by ID",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/externalLinkId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ExternalLink"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/external-links": {
            "get": {
                "tags": [
                    "ExternalLink"
                ],
                "summary": "Get a collection of external links",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "country_iso_2char_in",
                        "in": "query",
                        "description": "Filter, include only results from given countries identified by a collection of codes",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalLink"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/feedback-requests/{feedbackRequestNonce}": {
            "get": {
                "tags": [
                    "comment",
                    "purchase experience"
                ],
                "summary": "Get feedback request details",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "feedbackRequestNonce",
                        "in": "path",
                        "description": "Feedback request nonce",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/FeedbackRequest"
                        }
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/generic-events": {
            "get": {
                "tags": [
                    "GenericEvent"
                ],
                "summary": "Get generic events",
                "parameters": [
                    {
                        "$ref": "#/parameters/city_in"
                    },
                    {
                        "$ref": "#/parameters/max_distance"
                    },
                    {
                        "$ref": "#/parameters/max_distance_from_city"
                    },
                    {
                        "$ref": "#/parameters/now_open"
                    },
                    {
                        "$ref": "#/parameters/temporary"
                    },
                    {
                        "$ref": "#/parameters/vertical_in"
                    },
                    {
                        "$ref": "#/parameters/sort_by"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GenericEvent"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "No resource found"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/gifts": {
            "post": {
                "tags": [
                    "Gift",
                    "GiftProduct"
                ],
                "summary": "Currently can be used only with 'FROM-GIFTBOX' strategy - it starts Redeem process for given Giftbox (giftbox_code) and with chosen Activity (giftbox_type_item_id)",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "name": "giftProduct",
                        "in": "body",
                        "description": "Gift information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostGiftProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/GiftProduct"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}/gifts": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Create tailored Gift and add it to Cart",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "name": "giftCreationRequest",
                        "in": "body",
                        "description": "Gift creation request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GiftCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ResponseWithMessage"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/carts/{cartUuid}/gifts/{giftCode}": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Redeem gift code with chosen date+time+language. Appropriate Tickets with price 0 will be added to Cart",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/cartUuid"
                    },
                    {
                        "name": "giftCode",
                        "in": "path",
                        "description": "Gift code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "giftRedeemRequest",
                        "in": "body",
                        "description": "Gift redeem request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GiftRedeemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/ResponseWithMessage"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/giftboxes/{giftboxCode}": {
            "get": {
                "tags": [
                    "giftbox"
                ],
                "summary": "Get a giftbox by code",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/giftboxCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Giftbox"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "406": {
                        "description": "Returned when Giftbox is not found but there exists a redeemable Gift with that code. Follow returned 'Location' header to redeem said Gift"
                    },
                    "423": {
                        "description": "Returned when Giftbox cant be redeemed"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/giftbox-types/{giftboxTypeCode}": {
            "get": {
                "tags": [
                    "giftbox-types"
                ],
                "summary": "Get a giftbox type by code",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/giftboxTypeCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/GiftboxType"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/giftbox-types": {
            "get": {
                "tags": [
                    "giftbox-types"
                ],
                "summary": "Get all giftbox types sorted by relevance",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GiftboxType"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/giftbox-types/{giftboxTypeCode}/city-options": {
            "get": {
                "tags": [
                    "giftbox-types"
                ],
                "summary": "Get giftbox related city in an option list format",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/giftboxTypeCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SelectOption"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/giftbox-types/{giftboxTypeCode}/related": {
            "get": {
                "tags": [
                    "giftbox-types"
                ],
                "summary": "Get related giftboxes",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/giftboxTypeCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GiftboxType"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/giftbox-types/{giftboxCode}/regions": {
            "get": {
                "tags": [
                    "giftbox-types"
                ],
                "summary": "Get all regions for a giftbox",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/giftboxCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Region"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "406": {
                        "description": "Returned when Giftbox is not found but there exists a redeemable Gift with that code. Follow returned 'Location' header to redeem said Gift"
                    },
                    "423": {
                        "description": "Returned when Giftbox cant be redeemed"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/giftbox-types/{giftboxTypeCode}/items": {
            "get": {
                "tags": [
                    "giftbox-types"
                ],
                "summary": "Get items related to a giftboxe type",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/giftboxTypeCode"
                    },
                    {
                        "$ref": "#/parameters/text"
                    },
                    {
                        "$ref": "#/parameters/number_of_people"
                    },
                    {
                        "$ref": "#/parameters/city_in"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GiftboxTypeItem"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/lists/{listId}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "Get list by ID",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/listId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/MusementList"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/lists/{listId}/regions": {
            "get": {
                "tags": [
                    "List",
                    "Region"
                ],
                "summary": "Get all available regions for the list",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/listId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Region"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no resource is found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/lists": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "Get all lists",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Device-Type"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/city_in"
                    },
                    {
                        "$ref": "#/parameters/country_in"
                    },
                    {
                        "$ref": "#/parameters/category_in"
                    },
                    {
                        "$ref": "#/parameters/vertical"
                    },
                    {
                        "$ref": "#/parameters/exclude_not_tagged"
                    },
                    {
                        "$ref": "#/parameters/temporary"
                    },
                    {
                        "$ref": "#/parameters/listtypes"
                    },
                    {
                        "$ref": "#/parameters/listtags"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MusementList"
                            }
                        }
                    },
                    "302": {
                        "description": "Returned when more than 100 items required"
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/list-types": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "Get all List types",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ListType"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    }
                }
            }
        },
        "/languages": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get all the possible content languages",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentLanguage"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/poi-types": {
            "get": {
                "tags": [
                    "POI types"
                ],
                "summary": "Get all the POI types",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/activity-languages": {
            "get": {
                "tags": [
                    "content"
                ],
                "summary": "Get all possible languages for the activities",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/features": {
            "get": {
                "tags": [
                    "features, metadata"
                ],
                "summary": "Get all the available features",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/services": {
            "get": {
                "tags": [
                    "services, metadata"
                ],
                "summary": "Get all available services",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create an order",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "name": "order",
                        "in": "body",
                        "description": "Order information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/orders/{orderUuid}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get details for an order",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "name": "orderUuid",
                        "in": "path",
                        "description": "Order Uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    }
                }
            }
        },
        "/payments/braintree/payment": {
            "post": {
                "tags": [
                    "Braintree"
                ],
                "summary": "Pay an order.",
                "description": "Pay an order using braintree.",
                "parameters": [
                    {
                        "name": "braintreePayment",
                        "in": "body",
                        "description": "Braintree payment info request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BraintreePaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when payment was successful",
                        "schema": {
                            "$ref": "#/definitions/ResponseWithMessage"
                        }
                    },
                    "401": {
                        "description": "Returned when Order does not belong to authenticated Customer"
                    },
                    "404": {
                        "description": "Returned when Order was not found"
                    },
                    "422": {
                        "description": "Returned when there was error error during payment via Braintree (wrong credit card number, bad CVV code, not enough balance, etc)"
                    },
                    "423": {
                        "description": "Returned when Order is already payed"
                    },
                    "503": {
                        "description": "Returned when the service isUnavailable"
                    }
                }
            }
        },
        "/payments/no/payment": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Apply the no-payment strategy.",
                "description": "Apply the no-payment strategy for an order. You can use this strategy if the cart amount is zero or if you have the special `NoPaymentStrategy` grant",
                "responses": {
                    "200": {
                        "description": "Returned when payment was successful",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Returned when an exception happens during the no payment process"
                    },
                    "404": {
                        "description": "Returned when order was not found"
                    },
                    "422": {
                        "description": "Returned when order amount is > 0 and the client application doesn't have 'NO_PAYMENT' permission"
                    },
                    "423": {
                        "description": "Returned when order is already processed by NoPaymentStrategy"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/payments/paypal-express/redirect": {
            "post": {
                "tags": [
                    "paypal-express"
                ],
                "summary": "Generate Paypal Express redirect",
                "description": "Generate redirect url for payment using Paypal Express.",
                "parameters": [
                    {
                        "name": "postPaypalExpressRedirect",
                        "in": "body",
                        "description": "Paypal Express redirect data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostPaypalExpressRedirect"
                        }
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when success - now you need to redirect customer to 'redirect_url' from response body",
                        "schema": {
                            "$ref": "#/definitions/PaypalPaymentRedirect"
                        }
                    },
                    "400": {
                        "description": "Returned when request parameters are missing"
                    },
                    "401": {
                        "description": "Returned when Order does not belong to authenticated Customer"
                    },
                    "404": {
                        "description": "Returned when Order was not found"
                    },
                    "422": {
                        "description": "Returned when there was some error returned from Paypal"
                    },
                    "423": {
                        "description": "Returned when Order is already payed"
                    },
                    "503": {
                        "description": "Returned when the service isUnavailable"
                    }
                }
            }
        },
        "/payments/paypal-express/payment": {
            "post": {
                "tags": [
                    "paypal-express"
                ],
                "summary": "Pay an Order.",
                "description": "Complete Paypal Express payment process after return from Paypal site.",
                "parameters": [
                    {
                        "name": "postPaypalExpressComplete",
                        "in": "body",
                        "description": "Paypal Express complete data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostPaypalExpressComplete"
                        }
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when success",
                        "schema": {
                            "$ref": "#/definitions/PaypalPaymentRedirect"
                        }
                    },
                    "400": {
                        "description": "Returned when request parameters are missing"
                    },
                    "401": {
                        "description": "Returned when Order does not belong to authenticated Customer"
                    },
                    "404": {
                        "description": "Returned when Order was not found"
                    },
                    "406": {
                        "description": "Error code 10486 occurred when confirming Paypal payment. Now you need to redirect customer to url from 'Location' header. See: https://developer.paypal.com/webapps/developer/docs/classic/express-checkout/ht_ec_fundingfailure10486/"
                    },
                    "422": {
                        "description": "Returned when there was some error returned from Paypal"
                    },
                    "423": {
                        "description": "Returned when Order is already payed"
                    },
                    "503": {
                        "description": "Returned when the service isUnavailable"
                    }
                }
            }
        },
        "/payments/paypal/payment": {
            "post": {
                "tags": [
                    "Payment",
                    "Paypal"
                ],
                "summary": "Pay an Order.",
                "description": "Pay an Order using Paypal Payment Id.",
                "parameters": [
                    {
                        "name": "paypalPayment",
                        "in": "body",
                        "description": "Paypal payment info request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaypalPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when payment was successful",
                        "schema": {
                            "$ref": "#/definitions/PaypalSuccessfulPayment"
                        }
                    },
                    "401": {
                        "description": "Returned when Order does not belong to authenticated Customer"
                    },
                    "404": {
                        "description": "Returned when Order was not found"
                    },
                    "422": {
                        "description": "Returned when there was error error verifying payment via Paypal"
                    },
                    "423": {
                        "description": "Returned when Order is already payed"
                    },
                    "503": {
                        "description": "Returned when the service isUnavailable"
                    }
                }
            }
        },
        "/payments/stripe/stored_source_info": {
            "get": {
                "tags": [
                    "Payment",
                    "Order",
                    "stripe"
                ],
                "summary": "Get stored Stripe Source info",
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "404": {
                        "description": "Returned when no stored Stripe Source is found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/payments/stripe/payment": {
            "post": {
                "tags": [
                    "stripe"
                ],
                "summary": "Pay an order.",
                "description": "Pay an order using stripe.",
                "parameters": [
                    {
                        "name": "stripePayment",
                        "in": "body",
                        "description": "Stripe payment info request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostStripePayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when payment was successful",
                        "schema": {
                            "$ref": "#/definitions/StripeSuccessfulPayment"
                        }
                    },
                    "401": {
                        "description": "Returned when Order does not belong to authenticated Customer"
                    },
                    "302": {
                        "description": "Returned when 3D secure redirect is needed"
                    },
                    "404": {
                        "description": "Returned when Order was not found"
                    },
                    "422": {
                        "description": "Returned when there was error error during payment via Stripe (wrong credit card number, bad CVV code, not enough balance, etc)"
                    },
                    "423": {
                        "description": "Returned when Order is already payed"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/payments/stripe/complete_3d_secure": {
            "post": {
                "tags": [
                    "stripe"
                ],
                "summary": "Complete 3d secure payment.",
                "description": "Complete 3d secure payment after confirming it on card issuer page.",
                "responses": {
                    "200": {
                        "description": "Returned when payment was successful",
                        "schema": {
                            "$ref": "#/definitions/StripeSuccessfulPayment"
                        }
                    },
                    "401": {
                        "description": "Returned when Order does not belong to authenticated Customer"
                    },
                    "404": {
                        "description": "Returned when Order was not found"
                    },
                    "422": {
                        "description": "Returned when there was error error during payment via Stripe (wrong credit card number, bad CVV code, not enough balance, etc)"
                    },
                    "423": {
                        "description": "Returned when Order is already payed"
                    },
                    "503": {
                        "description": "Returned when the service isUnavailable"
                    }
                }
            }
        },
        "/pricetags/{id}": {
            "get": {
                "tags": [
                    "Pricetag"
                ],
                "summary": "Get the name for a pricetag",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Pricetag"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/proxy/auth/user": {
            "post": {
                "tags": [
                    "API proxy"
                ],
                "summary": "POST Login using password grant type",
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    },
                    "400": {
                        "description": "Returned when the login has errors"
                    }
                }
            }
        },
        "/proxy/auth/client": {
            "post": {
                "tags": [
                    "API proxy"
                ],
                "summary": "POST Login using client_credentials grant type",
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    },
                    "400": {
                        "description": "Returned when the login has errors"
                    }
                }
            }
        },
        "/login": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Login a user via OAuth 2",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "type": "string",
                        "default": "user"
                    },
                    {
                        "name": "client_secret",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "grant_type",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned when the errors"
                    }
                }
            }
        },
        "/refresh": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Retrieve a fresh access token",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "type": "string",
                        "default": "user"
                    },
                    {
                        "name": "client_secret",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "grant_type",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "refresh_token",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned when the errors"
                    }
                }
            }
        },
        "/signup/soft": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Register a new customer setting the softpassword",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    },
                    "400": {
                        "description": "Returned when the form has errors"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Begin a new signup process",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "signup",
                        "in": "body",
                        "description": "Signup information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignupByEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned when the form has errors"
                    }
                }
            }
        },
        "/signup/external_provider": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Register a new customer using external provider data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    },
                    "400": {
                        "description": "Returned when the form has errors"
                    }
                }
            }
        },
        "/reset_password": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Send reset password email. This method always returns 204",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "recover_password",
                        "in": "body",
                        "description": "Data to recover user's password",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecoverPassword"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Returned in all the other cases"
                    },
                    "406": {
                        "description": "Returned when there are wrong data in the request"
                    }
                }
            }
        },
        "/seller-gateways": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "Get all active seller gateways",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SellerGateway"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suggest": {
            "get": {
                "tags": [
                    "Autosuggest"
                ],
                "summary": "Search relevant items in Musement DB",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string. Minimum 3 chars",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when there are items."
                    },
                    "404": {
                        "description": "Returned when no data are found."
                    }
                }
            }
        },
        "/supplier-registrations": {
            "post": {
                "tags": [
                    "supplier-registration"
                ],
                "summary": "Register a new supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "PostSupplierRegistration",
                        "in": "body",
                        "description": "Supplier registrations data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostSupplierRegistration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    },
                    "400": {
                        "description": "Returned when the form has errors"
                    },
                    "503": {
                        "description": "Returned when te service is unavailable"
                    }
                }
            }
        },
        "/suppliers/{supplierUuid}/activate": {
            "patch": {
                "tags": [
                    "supplier-registration"
                ],
                "summary": "Activate a supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/supplierUuid"
                    },
                    {
                        "name": "PostSupplierActivation",
                        "in": "body",
                        "description": "Supplier activation data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostSupplierActivation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    },
                    "404": {
                        "description": "Returned when supplier not exists"
                    }
                }
            }
        },
        "/suppliers": {
            "get": {
                "tags": [
                    "supplier"
                ],
                "summary": "Get all active suppliers",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/me": {
            "get": {
                "tags": [
                    "supplier-profile"
                ],
                "summary": "Get logged supplier data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "patch": {
                "tags": [
                    "supplier-profile"
                ],
                "summary": "Update logged supplier data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "PatchSupplierRegistration",
                        "in": "body",
                        "description": "Supplier data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatchSupplierProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/me/price-features": {
            "get": {
                "tags": [
                    "supplier-activity"
                ],
                "summary": "Get all available price features for the logged in supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/{supplierUuid}/price-features": {
            "get": {
                "tags": [
                    "supplier-activity"
                ],
                "summary": "Get all price features for a particular supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/supplierUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/me/ticket-holders": {
            "get": {
                "tags": [
                    "supplier-activity"
                ],
                "summary": "Get all available ticket holders features for the logged in supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/{supplierUuid}/ticket-holders": {
            "get": {
                "tags": [
                    "supplier-activity"
                ],
                "summary": "Get all price ticket holders for a particular supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/supplierUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/me/activities/{activityUuid}": {
            "patch": {
                "tags": [
                    "supplier-activity"
                ],
                "summary": "Update details for a supplier's activity",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/activityUuid"
                    },
                    {
                        "name": "PatchActivity",
                        "in": "body",
                        "description": "Activity patch request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatchActivity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    },
                    "403": {
                        "description": "Returned if the client doesn't have permission to access the activity"
                    },
                    "404": {
                        "description": "Returned if the activity doesn't exist"
                    }
                }
            }
        },
        "/suppliers/me/activities": {
            "get": {
                "tags": [
                    "supplier-activity"
                ],
                "summary": "Get activities for the logged in supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/{supplierUuid}/activities": {
            "get": {
                "tags": [
                    "supplier-activity"
                ],
                "summary": "Get all activities for a particular supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/supplierUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TranslatedMetadata"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/me/orders": {
            "get": {
                "tags": [
                    "supplier-order"
                ],
                "summary": "Get orders for the logged in supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/with_ticket_status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/{supplierUuid}/orders": {
            "get": {
                "tags": [
                    "supplier-order"
                ],
                "summary": "Get orders for a particular supplier",
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/supplierUuid"
                    },
                    {
                        "$ref": "#/parameters/with_ticket_status"
                    },
                    {
                        "$ref": "#/parameters/date_from"
                    },
                    {
                        "$ref": "#/parameters/date_to"
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "Internal Musement order identifier | Use format: MUS12345",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "Customer name (both first name & last name)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activity_title",
                        "in": "query",
                        "description": "Activity title",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activity_uuid",
                        "in": "query",
                        "description": "Activity UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activity_date_from",
                        "in": "query",
                        "description": "Start date | Use format: YYYY-MM-DD",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activity_date_to",
                        "in": "query",
                        "description": "End date | Use format: YYYY-MM-DD",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/suppliers/{supplierUuid}": {
            "get": {
                "tags": [
                    "supplier"
                ],
                "summary": "Get supplier data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    },
                    "404": {
                        "description": "Returned when supplier not exists"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "patch": {
                "tags": [
                    "supplier"
                ],
                "summary": "Update supplier data",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "PatchSupplierRegistration",
                        "in": "body",
                        "description": "Supplier registrations data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatchSupplierProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    },
                    "400": {
                        "description": "Returned if sent data contains errors"
                    },
                    "404": {
                        "description": "Returned when supplier not exists"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/customers/me/orders/{order_id}/tickets/{ticket_id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get the details for a specific ticket",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "$order_id Order identifier",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "ticket_id",
                        "in": "path",
                        "description": "$ticket_id Ticket identifier",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/venues/{venueId}": {
            "get": {
                "tags": [
                    "Venue"
                ],
                "summary": "Get a venue",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/venueId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/venues/{venueId}/regions": {
            "get": {
                "tags": [
                    "Venue"
                ],
                "summary": "Get all available regions for the venue",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/venueId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Region"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no resource is found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/venues": {
            "get": {
                "tags": [
                    "Venue"
                ],
                "summary": "List venues",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter, include results on an activation status basis",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "visible",
                        "in": "query",
                        "description": "Filter, include results on a visibility status basis",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "country_in",
                        "in": "query",
                        "description": "Filter, include only results from given countries identified by a collection of ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit quota of events to return",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page from which starting to return found events (mandatory if limit is given)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset from which starting to return found events (mandatory if limit is given cannot be used within the page parameter)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Ordering criteria: [relevance], prepend `-` for descending order",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when at last a resource is found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Venue"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no resource matching the search is found"
                    }
                }
            }
        },
        "/venues/{venueId}/activities": {
            "get": {
                "tags": [
                    "Venue",
                    "activity"
                ],
                "summary": "Get all activities for a venue",
                "description": "Get all activities for an venue sorted by relevance. Only the activities that have at least one active date in the period specified between date_from and date_to are returned. If date_from and date_to are not set then the period that will be set will be one year from the date of the request'",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/venueId"
                    },
                    {
                        "$ref": "#/parameters/vertical"
                    },
                    {
                        "$ref": "#/parameters/city"
                    },
                    {
                        "$ref": "#/parameters/category"
                    },
                    {
                        "$ref": "#/parameters/editorial-category"
                    },
                    {
                        "$ref": "#/parameters/date_from"
                    },
                    {
                        "$ref": "#/parameters/date_to"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sorting strategy",
                        "required": false,
                        "type": "string",
                        "default": "venue-relevance",
                        "enum": [
                            "relevance",
                            "venue-relevance",
                            "category-relevance",
                            "price",
                            "rating"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/verticals/{verticalId}/regions": {
            "get": {
                "tags": [
                    "vertical",
                    "region"
                ],
                "summary": "Get all available regions for the vertical",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/verticalId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Region"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no resource is found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/verticals/{verticalId}": {
            "get": {
                "tags": [
                    "vertical"
                ],
                "summary": "Get verticals by unique identifier",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/verticalId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vertical"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/verticals": {
            "get": {
                "tags": [
                    "vertical"
                ],
                "summary": "Get all verticals",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/category_in"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vertical"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/verticals/{verticalId}/activities": {
            "get": {
                "tags": [
                    "vertical"
                ],
                "summary": "Get all activities for a vertical",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/X-Musement-Currency"
                    },
                    {
                        "$ref": "#/parameters/verticalId"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "302": {
                        "description": "Returned when more than 100 items requested"
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/verticals/{verticalId}/categories": {
            "get": {
                "tags": [
                    "Vertical"
                ],
                "summary": "Get categories by vertical ID",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "$ref": "#/parameters/verticalId"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "name": "filtering_aware",
                        "in": "query",
                        "description": "If true the category is usable as filter",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    },
                    "302": {
                        "description": "Returned when more than 100 items requested"
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/widgets/{widgetCode}": {
            "get": {
                "tags": [
                    "Widget"
                ],
                "summary": "Get a widget configuration by code",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/widgetCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/affiliates/me/widgets": {
            "get": {
                "tags": [
                    "Widget"
                ],
                "summary": "Get a widget collection for the current user",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Widget"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "post": {
                "tags": [
                    "Widget"
                ],
                "summary": "Create a new widget",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/affiliates/{supplierUuid}/widgets": {
            "get": {
                "tags": [
                    "Widget"
                ],
                "summary": "Get a widget collection by supplier uuid",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/supplierUuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Widget"
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            },
            "post": {
                "tags": [
                    "Widget"
                ],
                "summary": "Create a new widget for the specified supplier uuid",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/supplierUuid"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/affiliates/me/widgets/{widgetCode}": {
            "patch": {
                "tags": [
                    "Widget"
                ],
                "summary": "Update a widget",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/widgetCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        },
        "/wishes/{code}": {
            "get": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Get a wish",
                "parameters": [
                    {
                        "$ref": "#/parameters/X-Musement-Version"
                    },
                    {
                        "$ref": "#/parameters/Accept-Language"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Wish identifier in the form '[wish-id]-[wishtype]'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "schema": {
                            "$ref": "#/definitions/Wish"
                        }
                    },
                    "403": {
                        "description": "When the user has no authorization on the item it's trying to view"
                    },
                    "404": {
                        "description": "The item to view doesn't exists"
                    },
                    "503": {
                        "description": "Returned when the service is unavailable"
                    }
                }
            }
        }
    },
    "definitions": {
        "ExceptionResponse": {
            "properties": {
                "code": {
                    "description": "Error code",
                    "type": "string",
                    "example": "1401"
                },
                "message": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Full authentication is required to access this resource."
                }
            },
            "type": "object"
        },
        "passengersInfoForm": {
            "properties": {
                "number": {
                    "description": "Number of passengers",
                    "type": "integer"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormFieldDefinition"
                    }
                }
            },
            "type": "object"
        },
        "FormFieldValue": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "firstname"
                },
                "value": {
                    "type": "string",
                    "example": "Linus"
                }
            },
            "type": "object"
        },
        "FormError": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "global_error_message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormFieldError"
                    }
                }
            },
            "type": "object"
        },
        "FormFieldError": {
            "properties": {
                "field_name": {
                    "type": "string"
                },
                "field_error_message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FormFieldDefinition": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "firstname"
                },
                "value": {
                    "type": "string",
                    "example": "Linus"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "text",
                        "date",
                        "number"
                    ],
                    "example": "text"
                },
                "required": {
                    "type": "boolean",
                    "example": true
                },
                "label": {
                    "description": "This is the label for the field. It depends on the value of `Accept-Language`",
                    "type": "string",
                    "example": "Nome:"
                }
            },
            "type": "object"
        },
        "CustomerGender": {
            "properties": {
                "code": {
                    "description": "Customer's gender code. Possible values are:\n * MALE: Male\n * FEMALE: Female\n * OTHER: Other",
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE",
                        "OTHER"
                    ],
                    "example": "MALE"
                },
                "name": {
                    "description": "Customer's gender label. | This value depends on the value of the header Accept-Language",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NewsletterFrequency": {
            "properties": {
                "code": {
                    "description": "\n * 3-TIMES-A-WEEK: Three newsletters a week,\n * WEEKLY: A newsletter a week\n * MONTHLY: A newsletter a month,\n * NEVER: No newsletters are sent to the customer",
                    "type": "string",
                    "enum": [
                        "3-TIMES-A-WEEK",
                        "WEEKLY",
                        "MONTHLY",
                        "NEVER"
                    ],
                    "example": "WEEKLY"
                },
                "name": {
                    "description": "Customer's newsletter frequency name. | This value depends on the value of the header Accept-Language",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NewsletterThirdparty": {
            "properties": {
                "code": {
                    "description": "\n * YES: Yes\n * NO: No",
                    "type": "string",
                    "enum": [
                        "YES",
                        "NO"
                    ],
                    "example": "YES"
                },
                "name": {
                    "description": "Customer's newsletter from thirdparty name. | This value depends on the value of the header Accept-Language",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CustomerInterest": {
            "properties": {
                "code": {
                    "description": "\n * ARTS-CULTURE : Arts and culture,\n * SIGHTSEEING :  Sightseeing,\n * FOOD-WINE : Food and wine,\n * ENTERTAIMENT : Entertaiment,\n * SPORTS : Sports,\n * ADVENTURE : Adventure,\n * NIGHTLIFE : Nightlife",
                    "type": "string",
                    "enum": [
                        "ARTS-CULTURE",
                        "SIGHTSEEING",
                        "FOOD-WINE",
                        "ENTERTAIMENT",
                        "SPORTS",
                        "ADVENTURE",
                        "NIGHTLIFE"
                    ],
                    "example": "SIGHTSEEING"
                },
                "name": {
                    "description": "Customer's interest name. | This value depends on the value of the header Accept-Language",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CustomerTravelWith": {
            "properties": {
                "code": {
                    "description": "\n * ALONE : Alone,\n * PARTNER : Partner,\n * FAMILY : Family,\n * FRIENDS : Friends,\n * GROUP : Group",
                    "type": "string",
                    "enum": [
                        "ALONE",
                        "PARTNER",
                        "FAMILY",
                        "FRIENDS",
                        "GROUP"
                    ],
                    "example": "PARTNER"
                },
                "name": {
                    "description": "Customer's travel with name. | This value depends on the value of the header Accept-Language",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExtraCustomerData": {
            "properties": {
                "event": {
                    "properties": {
                        "id": {
                            "type": "string"
                        }
                    }
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormFieldDefinition"
                    }
                }
            }
        },
        "FormTicket": {
            "properties": {
                "product": {
                    "properties": {
                        "id": {
                            "type": "string"
                        }
                    }
                },
                "passengers_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormFieldDefinition"
                    }
                }
            }
        },
        "CheckoutForm": {
            "properties": {
                "customer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormFieldDefinition"
                    }
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormTicket"
                    }
                },
                "extra_customer_data": {
                    "items": {
                        "$ref": "#/definitions/ExtraCustomerData"
                    }
                }
            }
        },
        "Token": {
            "properties": {
                "access_token": {
                    "description": "The new generated access token",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "The refresh token",
                    "type": "string"
                },
                "expires_in": {
                    "description": "Seconds the token will expire in",
                    "type": "integer"
                },
                "token_type": {
                    "description": "The type of the token",
                    "type": "string"
                },
                "scope": {
                    "description": "The authentication request scope",
                    "type": "string"
                }
            }
        },
        "PostActivityBlackoutDay": {
            "properties": {
                "day": {
                    "description": "Day to add | YYYY-MM-DD",
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "Commission": {
            "required": [
                "type",
                "value"
            ],
            "properties": {
                "type": {
                    "description": "Commission type | Can be 'ABSOLUTE' or 'PERCENTAGE'.",
                    "type": "string"
                },
                "value": {
                    "description": "Commission value. Max 2 decimals.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PostActivityItinerary": {
            "properties": {
                "code": {
                    "description": "Itinerary code",
                    "type": "string"
                },
                "pois": {
                    "description": "POI type",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActivityPoi"
                    }
                }
            }
        },
        "PostActivityMedia": {
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "description": "Image URL",
                    "type": "string"
                },
                "title": {
                    "description": "Image title",
                    "type": "string"
                },
                "is_cover": {
                    "description": "The image will be set as the cover. If a cover image is already set this will its place.",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "PostActivityOpenSeason": {
            "properties": {
                "title": {
                    "description": "Activity title - Internal name not exposed to the customer",
                    "type": "string"
                },
                "feature_code": {
                    "description": "Price feature code | Get them using GET /suppliers/me/price-features",
                    "type": "string"
                },
                "validity": {
                    "description": "Validity period for the ticket in ISO-8601 format. Days, hours and minutes are accepted",
                    "type": "string"
                },
                "valid_until": {
                    "description": "Last day the ticket can be used",
                    "type": "string"
                },
                "prices": {
                    "description": "Last day the ticket can be used",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PostActivitySeasonSetupPrice"
                    }
                },
                "languages": {
                    "description": "A list of languages the activity is available in",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PostActivityPoi": {
            "properties": {
                "latitude": {
                    "description": "POI latitude",
                    "type": "number"
                },
                "longitude": {
                    "description": "POI longitude",
                    "type": "number"
                },
                "type": {
                    "description": "POI type",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PostActivitySeasonSetupPrice": {
            "properties": {
                "holder_code": {
                    "description": "Ticket holder code | Get them using GET /suppliers/me/ticket-holders",
                    "type": "string"
                },
                "age_info": {
                    "description": "Extra age info related to the holder",
                    "type": "string"
                },
                "supplier_price": {
                    "description": "Activity price we pay to the supplier",
                    "type": "string"
                },
                "retail_price_supplier": {
                    "description": "Activity retail price for the supplier",
                    "type": "string"
                }
            }
        },
        "PostActivitySeasonSetupTimeslot": {
            "properties": {
                "time": {
                    "description": "Time in the format HH:MM",
                    "type": "string"
                },
                "availability": {
                    "description": "Number of available places",
                    "type": "integer"
                }
            }
        },
        "PostActivitySeasonSetup": {
            "properties": {
                "type": {
                    "description": "Time slot type. Can be 'WITH-TIMESLOTS' or 'DAILY' ",
                    "type": "string"
                },
                "title": {
                    "description": "Internal name that identify the timeslot",
                    "type": "string"
                },
                "days": {
                    "description": "Days",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "feature_code": {
                    "description": "Price features codes | Get them using GET /suppliers/me/price-features",
                    "type": "string"
                },
                "prices": {
                    "description": "Prices",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PostActivitySeasonSetupPrice"
                    }
                },
                "timeslots": {
                    "description": "Timeslots",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PostActivitySeasonSetupTimeslot"
                    }
                },
                "languages": {
                    "description": "A list of languages the activity is available in",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "min_purchasable_qty": {
                    "description": "Min purchasable quantity",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1
                },
                "max_purchasable_qty": {
                    "description": "Max purchasable quantity",
                    "type": "integer",
                    "default": 15
                }
            }
        },
        "PostTimedSeason": {
            "properties": {
                "title": {
                    "description": "Internal name that identify the season",
                    "type": "string"
                },
                "from_day": {
                    "description": "The day the season starts | YYYY-MM-DD",
                    "type": "string"
                },
                "to_day": {
                    "description": "The day the season ends | YYYY-MM-DD",
                    "type": "string"
                },
                "setups": {
                    "description": "Season setups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PostActivitySeasonSetup"
                    }
                }
            }
        },
        "PatchTimeslot": {
            "required": [
                "status",
                "availability",
                "languages",
                "products"
            ],
            "properties": {
                "status": {
                    "description": "Set the timeslot opened or closed. Accepted values are OPEN and CLOSE",
                    "type": "string"
                },
                "availability": {
                    "description": "Number of available places. Use -1 if the date is free sales",
                    "type": "integer"
                },
                "languages": {
                    "description": "A list of languages the activity is available in ISO 639-1 format",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "products": {
                    "description": "A list of products to add",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PostTimeslotProduct"
                    }
                }
            },
            "type": "object"
        },
        "PostTimeslot": {
            "required": [
                "time",
                "status",
                "availability",
                "languages",
                "products"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PatchTimeslot"
                },
                {
                    "required": [
                        "time"
                    ],
                    "properties": {
                        "time": {
                            "description": "Time | Use format HH:MM | Example: 21:45",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "PostTimeslotProduct": {
            "properties": {
                "supplier_price": {
                    "description": "Activity supplier price",
                    "type": "string"
                },
                "retail_price_supplier": {
                    "description": "Activity retail price",
                    "type": "string"
                },
                "currency": {
                    "description": "Price currency",
                    "type": "string"
                },
                "holder_code": {
                    "description": "Holder code",
                    "type": "string"
                },
                "feature_code": {
                    "description": "Feature code",
                    "type": "string"
                }
            }
        },
        "PutTimeslotProduct": {
            "properties": {
                "supplier_price": {
                    "description": "Activity supplier price",
                    "type": "string"
                },
                "retail_price_supplier": {
                    "description": "Activity retail price",
                    "type": "string"
                },
                "currency": {
                    "description": "Price currency",
                    "type": "string"
                }
            }
        },
        "PostActivity": {
            "properties": {
                "type": {
                    "description": "Activity type | Can be 'ACTIVITY' or 'TOUR'",
                    "type": "string"
                },
                "seller_gateway": {
                    "description": "Seller gateway. | Get them using GET /seller-gateways",
                    "type": "string"
                },
                "vertical": {
                    "description": "Vertical.",
                    "type": "integer"
                },
                "categories": {
                    "description": "Categories, related to the vertical, for the activity.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "highlights": {
                    "description": "Highlights, for the activity | Get them using GET /activity-taxonomies/highlights.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "description": "Activity duration as ISO-8601 period. Only day, hours and minutes are accepted.",
                    "type": "string"
                },
                "inclusions": {
                    "description": "What's included ? | Get them using GET /activity-taxonomies/features",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exclusions": {
                    "description": "What's excluded | Get them using GET /activity-taxonomies/features",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "description": "Features | Get them using GET /features",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "services": {
                    "description": "Services | Get them using GET /services",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mobile_ticket_is_accepted": {
                    "description": "Is the mobile ticket accepted ?",
                    "type": "boolean"
                },
                "cutoff_time": {
                    "description": "Cutoff time as ISO-8601 period. Only days, hours and minutes are accepted.",
                    "type": "string"
                },
                "max_confirmation_time": {
                    "description": "Max period of time the supplier need to confirm the reservation. Only days, hours and minutes are accepted as ISO-8601 period.",
                    "type": "string"
                },
                "partner_internal_code": {
                    "description": "Internal code of the partner",
                    "type": "string"
                },
                "partner": {
                    "description": "Partner UUID",
                    "type": "string"
                },
                "reduction": {
                    "description": "A list of people who can have reduction.",
                    "type": "string"
                },
                "proposed_commission": {
                    "description": "Desired commission for this activity"
                },
                "status": {
                    "description": "\n * ONLINE: The activity is visible on musement.com and it can be booked\n * ARCHIVED: The activity is visible on musement.com but it cannot be booked\n * INACTIVE: The activity is not visible on musement.com",
                    "type": "string",
                    "enum": [
                        "ONLINE",
                        "ARCHIVED",
                        "INACTIVE"
                    ]
                }
            },
            "type": "object"
        },
        "PatchActivity": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PostActivity"
                }
            ]
        },
        "PatchCustomerGuestCart": {
            "required": [
                "musement_newsletter",
                "thirdparty_newsletter"
            ],
            "properties": {
                "musement_newsletter": {
                    "description": "Subscribe to Musement's newsletter ?",
                    "type": "string",
                    "enum": [
                        "YES",
                        "NO"
                    ]
                },
                "thirdparty_newsletter": {
                    "description": "Subscribe to thirdparty's newsletter ?",
                    "type": "string",
                    "enum": [
                        "YES",
                        "NO"
                    ]
                },
                "city": {
                    "description": "City",
                    "type": "string"
                },
                "address": {
                    "description": "Address",
                    "type": "string"
                },
                "zipcode": {
                    "description": "Zip code",
                    "type": "string"
                },
                "tax_id": {
                    "description": "Tax identifier",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostGiftboxCustomizationInfo": {
            "properties": {
                "keep_secret": {
                    "description": "Keep the giftbox secret",
                    "type": "boolean"
                },
                "donor_name": {
                    "description": "Donor name",
                    "type": "string"
                },
                "message": {
                    "description": "Personal message for the receiver",
                    "type": "string"
                },
                "picture_url": {
                    "description": "Cover image url",
                    "type": "string"
                },
                "recipient_name": {
                    "description": "Recipient name",
                    "type": "string"
                },
                "recipient_email": {
                    "description": "Recipient email address",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostCartItem": {
            "properties": {
                "type": {
                    "description": "Product type",
                    "type": "string",
                    "enum": [
                        "musement-giftbox",
                        "musement"
                    ]
                },
                "product_identifier": {
                    "description": "Product unique identifier | Can be a numeric or alphanumeric identifier depending of the type of product.",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantity",
                    "type": "string",
                    "minimum": 1
                }
            },
            "type": "object",
            "discriminator": "type"
        },
        "musement": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PostCartItem"
                },
                {
                    "properties": {
                        "language": {
                            "description": "Language of the activities",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "musement-giftbox": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PostCartItem"
                },
                {
                    "properties": {
                        "product_specific_data": {
                            "description": "Extra product information. Model changed depending on the 'type' of product",
                            "$ref": "#/definitions/PostGiftboxCustomizationInfo"
                        }
                    }
                }
            ]
        },
        "PatchCustomerPreferences": {
            "properties": {
                "newsletter_frequency": {
                    "description": "How often the customer want to receive a newsletter ?\n * 3-TIMES-A-WEEK: Three newsletters a week,\n * WEEKLY: A newsletter a week\n * MONTHLY: A newsletter a month,\n * NEVER: No newsletters are sent to the customer",
                    "type": "string",
                    "enum": [
                        "3-TIMES-A-WEEK",
                        "WEEKLY",
                        "MONTHLY",
                        "NEVER"
                    ]
                },
                "newsletter_from_thirdparty": {
                    "description": "Does the customer want to receive newsletter from Musement's thirdparty ?\n * YES: Yes\n * NO: No",
                    "type": "string",
                    "enum": [
                        "YES",
                        "NO"
                    ]
                },
                "interests": {
                    "description": "Customer's interests ?\n * ARTS-CULTURE : Arts and culture,\n * SIGHTSEEING :  Sightseeing,\n * FOOD-WINE : Food and wine,\n * ENTERTAIMENT : Entertaiment,\n * SPORTS : Sports,\n * ADVENTURE : Adventure,\n * NIGHTLIFE : Nightlife",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ARTS-CULTURE",
                            "SIGHTSEEING",
                            "FOOD-WINE",
                            "ENTERTAIMENT",
                            "SPORTS",
                            "ADVENTURE",
                            "NIGHTLIFE"
                        ]
                    }
                },
                "travel_with": {
                    "description": "The customer like to travel with:\n * ALONE : Alone,\n * PARTNER : Partner,\n * FAMILY : Family,\n * FRIENDS : Friends,\n * GROUP : Group",
                    "type": "string",
                    "enum": [
                        "ALONE",
                        "PARTNER",
                        "FAMILY",
                        "FRIENDS",
                        "GROUP"
                    ]
                }
            },
            "type": "object"
        },
        "CustomerRequest": {
            "properties": {
                "firstname": {
                    "description": "Customer's first name",
                    "type": "string"
                },
                "lastname": {
                    "description": "Customer's last name",
                    "type": "string"
                },
                "mobile": {
                    "description": "Customer mobile number with country code.",
                    "type": "string"
                },
                "city": {
                    "description": "Customer's city (free text)",
                    "type": "string"
                },
                "address": {
                    "description": "Customer's street address",
                    "type": "string"
                },
                "birthdate": {
                    "description": "Date of birth of the customer, ICU format: 'YYYY-MM-DD'",
                    "type": "string",
                    "format": "date",
                    "example": "1979-04-13"
                },
                "gender": {
                    "description": "Customer's gender. Possible values are:\n * MALE: Male\n * FEMALE: Female\n * OTHER: Other",
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE",
                        "OTHER"
                    ]
                }
            },
            "type": "object"
        },
        "PutCustomer": {
            "required": [
                "firstname",
                "lastname",
                "city",
                "address",
                "birthdate",
                "gender"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/CustomerRequest"
                }
            ]
        },
        "PatchCustomer": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/CustomerRequest"
                }
            ]
        },
        "PostActivityTimeslotProduct": {
            "properties": {
                "supplier_price": {
                    "description": "Price Musement pay to the supplier.",
                    "type": "number",
                    "format": "float"
                },
                "retail_price_supplier": {
                    "description": "Price the supplier wants for customers. If no discount is equal to retail price.",
                    "type": "number",
                    "format": "float"
                },
                "currency": {
                    "description": "Currency | Use 'code' field from GET /api/v3/currencies",
                    "type": "string"
                },
                "holder_code": {
                    "description": "Holder code",
                    "type": "string"
                },
                "feature_code": {
                    "description": "Feature code",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostGiftProduct": {
            "properties": {
                "strategy": {
                    "description": "Strategy for creation of this GiftProduct. Currently only supported is: FROM-GIFTBOX",
                    "type": "string"
                },
                "giftbox_code": {
                    "description": "Giftbox code - from which Giftbox this GiftProduct will be created",
                    "type": "string"
                },
                "giftbox_type_item_id": {
                    "description": "GiftboxTypeItem id - describes Activity chosen by user",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GiftboxCartType": {
            "properties": {
                "giftbox_type": {
                    "description": "Giftbox type code",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantity",
                    "type": "integer"
                },
                "donor_name": {
                    "description": "Name of the donor",
                    "type": "string"
                },
                "receiver_email": {
                    "description": "Email of the person that receive the gift box",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostNoPayment": {
            "properties": {
                "id": {
                    "description": "Order ID - Deprecated, use uuid",
                    "type": "integer"
                },
                "uuid": {
                    "description": "Order UUID",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostOrder": {
            "properties": {
                "cart_id": {
                    "description": "Cart ID - Deprecated, use uuid",
                    "type": "integer"
                },
                "cart_uuid": {
                    "description": "Cart UUID",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostActivityContent": {
            "properties": {
                "locale": {
                    "description": "Locale code",
                    "type": "string"
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PutActivityContent"
                }
            ]
        },
        "PostPaypalExpressComplete": {
            "properties": {
                "order_uuid": {
                    "description": "Uuid of Order for which payment will be completed",
                    "type": "string"
                },
                "token": {
                    "description": "Returned from Paypal in return url",
                    "type": "string"
                },
                "payer_id": {
                    "description": "It is 'PayerID' returned from Paypal in return url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostPaypalExpressRedirect": {
            "properties": {
                "order_id": {
                    "description": "Uuid or id of Order that payment will be for",
                    "type": "string"
                },
                "return_url": {
                    "description": "Absolute url. Here Paypal will redirect after user completes payment successfully on their site (paypal.com). You can add some query params if you want. Our Api action will add 'order_uuid' to this url so when redirected back we know what Order is this about. Paypal will add 'token' and 'PayerID' query params to end of url: 'token=EC-8UW872335L727771H&PayerID=CLRRGZHMA9LZJ'",
                    "type": "string"
                },
                "cancel_url": {
                    "description": "Absolute url. Similar as return_url but will be used if user clicks 'cancel' on paypal site - so payment is not completed",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostPromoIntent": {
            "properties": {
                "promo": {
                    "description": "The promo id",
                    "type": "integer"
                },
                "triggering_product": {
                    "description": "The current event id",
                    "type": "integer"
                },
                "target_product": {
                    "description": "The chosen event id",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PutActivityContent": {
            "properties": {
                "title": {
                    "description": "Title for the activity",
                    "type": "string"
                },
                "description": {
                    "description": "Description for the activity",
                    "type": "string"
                },
                "when": {
                    "description": "When the activity happen",
                    "type": "string"
                },
                "operational_days": {
                    "description": "On which days doesn the activity happen ?",
                    "type": "string"
                },
                "duration": {
                    "description": "Activity duration as ISO-8601 period. Only hours and minutes are accepted.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SignupByEmailRequest": {
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "description": "Customer's email",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostStripePayment": {
            "properties": {
                "id": {
                    "description": "Order ID - Deprecated, use order_uuid",
                    "type": "integer"
                },
                "order_uuid": {
                    "description": "Order UUID",
                    "type": "string"
                },
                "stripe_token": {
                    "description": "Stripe token. If not specified stripe_source_id must be specified.",
                    "type": "string"
                },
                "stripe_source_id": {
                    "description": "Stripe source id. If not specified stripe_token must be specified.",
                    "type": "string"
                },
                "is_apple_pay": {
                    "description": "Set to true if is an Apple Pay payment",
                    "type": "boolean"
                },
                "client_id": {
                    "description": "Client IP",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PatchSupplierProfile": {
            "properties": {
                "firstname": {
                    "description": "Firstname of the contact person",
                    "type": "string"
                },
                "lastname": {
                    "description": "Lastname of the contact person",
                    "type": "string"
                },
                "company_legal_name": {
                    "description": "Company legal name",
                    "type": "string"
                },
                "company_name": {
                    "description": "Customer friendly name. It appears on the voucher",
                    "type": "string"
                },
                "contact_name": {
                    "description": "Contact name",
                    "type": "string"
                },
                "contact_phone_number": {
                    "description": "Contact phone number",
                    "type": "string"
                },
                "website": {
                    "description": "Supplier's website",
                    "type": "string"
                },
                "support_email": {
                    "description": "Supplier's customer care email.",
                    "type": "string"
                },
                "country_code": {
                    "description": "Supplier's country | 2 chars code",
                    "type": "string"
                },
                "address": {
                    "description": "Supplier's address",
                    "type": "string"
                },
                "zip_code": {
                    "description": "Address zip code",
                    "type": "string"
                },
                "city": {
                    "description": "Supplier's city",
                    "type": "string"
                },
                "tax_id": {
                    "description": "Supplier's tax identifier.",
                    "type": "string"
                },
                "default_currency": {
                    "description": "Default currency used to upload products | Values from GET /api/v3/currencies",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostSupplierRegistration": {
            "required": [
                "password",
                "email",
                "firstname",
                "lastname",
                "company_legal_name",
                "company_name",
                "country_code",
                "address",
                "zip_code",
                "city",
                "default_currency"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PatchSupplierProfile"
                },
                {
                    "properties": {
                        "password": {
                            "description": "Login password",
                            "type": "string",
                            "maxLength": 50,
                            "minLength": 8
                        },
                        "email": {
                            "description": "Email used to login and recover password. It's not shown to customers",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "PostSupplierActivation": {
            "required": [
                "confirmation_token"
            ],
            "properties": {
                "confirmation_token": {
                    "description": "registration confirmation token",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TicketCodeType": {
            "properties": {
                "encoding": {
                    "description": "Ticket encoding type",
                    "type": "string",
                    "enum": [
                        "qrcode",
                        "barcode25",
                        "barcode39",
                        "barcode128"
                    ]
                },
                "status": {
                    "description": "Status of the ticket code",
                    "type": "string",
                    "enum": [
                        "inactive",
                        "active",
                        "generated"
                    ]
                },
                "custom_text": {
                    "description": "Custom text",
                    "type": "string"
                },
                "codes": {
                    "description": "Array of ticket codes to be added",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ActivityCalendarUpdateRequest": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "ActivityCalendarUpdateRequest"
            }
        },
        "ActivityContent": {
            "properties": {
                "locale": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "when": {
                    "type": "string"
                },
                "operational_days": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "xml": {
                "name": "ActivityContent"
            }
        },
        "ActivityItinerary": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "pois": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActivityPoi"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "ActivityItinerary"
            }
        },
        "ActivityPoi": {
            "properties": {
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TranslatedMetadata"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "ActivityPoi"
            }
        },
        "ActivityRelated": {
            "properties": {
                "events_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "cover_image": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "api_url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "ActivityRelated"
            }
        },
        "ActivityRelatedResult": {
            "properties": {
                "matched": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActivityRelated"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "ActivityRelatedResult"
            }
        },
        "ActivitySearchResult": {
            "properties": {
                "meta": {
                    "$ref": "#/definitions/SearchResultMetaData"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "ActivitySearchResult"
            }
        },
        "ActivityTaxonomy": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "ActivityTaxonomy"
            }
        },
        "Affiliate": {
            "required": [
                "code",
                "name",
                "logo_url"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "secondary_logo_url": {
                    "type": "string"
                },
                "whitelabel": {
                    "type": "boolean"
                },
                "show_cobranded_header": {
                    "type": "boolean"
                },
                "show_cobranded_voucher": {
                    "type": "boolean"
                },
                "show_cobranded_item_confirmation_email": {
                    "type": "boolean"
                },
                "setup_cookie_after_first_visit": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "xml": {
                "name": "Affiliate"
            }
        },
        "AutocompleteItem": {
            "properties": {
                "hint": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "cover_image": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "api_url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "AutocompleteItem"
            }
        },
        "AutocompleteResult": {
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AutocompleteItem"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "AutocompleteResult"
            }
        },
        "Background": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "slogan": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "cover_image_url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Background"
            }
        },
        "Barcode": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "used": {},
                "season_pass": {}
            },
            "type": "object",
            "xml": {
                "name": "Barcode"
            }
        },
        "BlackoutDay": {
            "properties": {
                "day": {
                    "type": "string",
                    "format": "date"
                }
            },
            "type": "object",
            "xml": {
                "name": "BlackoutDay"
            }
        },
        "Blogger": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "social_url": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Blogger"
            }
        },
        "Blogpost": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "abstract": {
                    "type": "string"
                },
                "publish_date": {
                    "type": "string",
                    "format": "date"
                },
                "url": {
                    "type": "string"
                },
                "background_image": {
                    "type": "string"
                },
                "background_image_credits": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "vertical": {
                    "$ref": "#/definitions/Vertical"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BlogpostCategory"
                    }
                },
                "list": {
                    "$ref": "#/definitions/MusementList"
                },
                "city": {
                    "$ref": "#/definitions/City"
                },
                "venue": {
                    "$ref": "#/definitions/Venue"
                },
                "author": {
                    "$ref": "#/definitions/Blogger"
                },
                "share_image": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Blogpost"
            }
        },
        "BlogpostBlock": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "BlogpostBlock"
            }
        },
        "BlogpostBlockEmbeddedHtml": {
            "properties": {
                "embedded_code": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "BlogpostBlockEmbeddedHtml"
            }
        },
        "BlogpostBlockImage": {
            "properties": {
                "url": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "shareable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "BlogpostBlockImage"
            }
        },
        "BlogpostBlockText": {
            "properties": {
                "text": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "BlogpostBlockText"
            }
        },
        "BlogpostCategory": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "background_image": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "BlogpostCategory"
            }
        },
        "BlogpostCategoryAggregated": {
            "properties": {
                "blogpost_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "background_image": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "BlogpostCategoryAggregated"
            }
        },
        "Bucket": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Bucket"
            }
        },
        "Bundle": {
            "properties": {
                "discount": {
                    "type": "integer"
                },
                "discount_type": {
                    "type": "string"
                },
                "bundle_type": {
                    "description": "on_everything|from_second|no_discount",
                    "type": "string"
                },
                "rule_id": {
                    "type": "string"
                },
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "Bundle"
            }
        },
        "Cart": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CartItem"
                    }
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ticket"
                    }
                },
                "discount_code": {
                    "title": "discount_code",
                    "description": "This is used only when the cart is posted/put/patched. This can be a discount code or the code of a giftcard.",
                    "type": "string"
                },
                "gift_card": {
                    "$ref": "#/definitions/GiftCard"
                },
                "promo_code": {
                    "$ref": "#/definitions/PromoCode"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "customer_id": {
                    "type": "integer"
                },
                "full_price": {
                    "description": "Cart price. Discount is not considered",
                    "$ref": "#/definitions/Price"
                },
                "discount": {
                    "description": "Cart discount",
                    "$ref": "#/definitions/Price"
                },
                "retail_price": {
                    "description": "Cart price. This is the price the customer must pay. Discount, if present, is applied. ",
                    "$ref": "#/definitions/Price"
                },
                "service_fee": {
                    "$ref": "#/definitions/Price"
                }
            },
            "type": "object",
            "xml": {
                "name": "Cart"
            }
        },
        "CartItemMusement": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/CartItem"
                },
                {
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "musement"
                            ]
                        },
                        "language": {
                            "description": "Language of the activity",
                            "type": "string"
                        },
                        "product": {
                            "$ref": "#/definitions/TimeslotProduct"
                        }
                    }
                }
            ],
            "x-extendedDiscriminator": "type"
        },
        "CartItemMusementGiftbox": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/CartItem"
                },
                {
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "musement-giftbox"
                            ]
                        },
                        "product": {
                            "$ref": "#/definitions/Giftbox"
                        }
                    }
                }
            ]
        },
        "CartItem": {
            "properties": {
                "uuid": {
                    "description": "Unique identifier on Musement platform",
                    "type": "string"
                },
                "type": {
                    "description": "Product type",
                    "type": "string",
                    "enum": [
                        "musement",
                        "musement-giftbox"
                    ]
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "description": "Total price for the number of items. It's `final_price` x `quantity`. It's calculated server side to take care of rounding an discount",
                    "$ref": "#/definitions/Price"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "PREBOOK_OK",
                        "PREBOOK_KO"
                    ]
                }
            },
            "discriminator": "type"
        },
        "Category": {
            "required": [
                "id",
                "name",
                "level",
                "code",
                "cover_image_url"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "event_image_url": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Category"
            }
        },
        "CategoryAggregated": {
            "properties": {
                "event_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "event_image_url": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "CategoryAggregated"
            }
        },
        "City": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "top": {
                    "description": "Indicate if the event is a Musement 'top' event",
                    "type": "boolean"
                },
                "has_concierge": {
                    "description": "True for cities with Musement's concierge service active",
                    "type": "boolean"
                },
                "name": {
                    "description": "City name",
                    "type": "string"
                },
                "code": {
                    "description": "City code. Do not depends on locale",
                    "type": "string"
                },
                "content": {
                    "description": "Description",
                    "type": "string"
                },
                "more": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "events_count": {
                    "description": "Number of active events",
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "City"
            }
        },
        "CityAggregated": {
            "properties": {
                "event_count": {
                    "type": "integer"
                },
                "list_count": {
                    "type": "integer"
                },
                "venue_count": {
                    "type": "integer"
                },
                "show_in_popular": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "top": {
                    "description": "Indicate if the event is a Musement 'top' event",
                    "type": "boolean"
                },
                "has_concierge": {
                    "description": "True for cities with Musement's concierge service active",
                    "type": "boolean"
                },
                "name": {
                    "description": "City name",
                    "type": "string"
                },
                "code": {
                    "description": "City code. Do not depends on locale",
                    "type": "string"
                },
                "content": {
                    "description": "Description",
                    "type": "string"
                },
                "more": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "events_count": {
                    "description": "Number of active events",
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "CityAggregated"
            }
        },
        "Comment": {
            "properties": {
                "status": {
                    "type": "string"
                },
                "author": {
                    "$ref": "#/definitions/Customer"
                },
                "locale": {
                    "type": "string"
                },
                "pictures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "rating": {
                    "type": "number",
                    "format": "float"
                },
                "sent_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "event": {
                    "$ref": "#/definitions/Event"
                }
            },
            "type": "object",
            "xml": {
                "name": "Comment"
            }
        },
        "ContentSnippet": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "cover_image": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "api_url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "ContentSnippet"
            }
        },
        "MixedContentResult": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "MixedContentResult"
            }
        },
        "SelectOption": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "SelectOption"
            }
        },
        "ContentLanguage": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "ContentLanguage"
            }
        },
        "ContentManager": {
            "type": "object",
            "xml": {
                "name": "ContentManager"
            }
        },
        "Country": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "iso_code": {
                    "type": "string"
                },
                "country_prefix": {
                    "type": "string"
                },
                "currency_code": {
                    "description": "Our currency code for that Country - for United Stated its USD, for Great Britain its GBP etc",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Country"
            }
        },
        "Currency": {
            "properties": {
                "code": {
                    "title": "Currency code | 3 letters",
                    "type": "string",
                    "example": "USD"
                },
                "name": {
                    "title": "Currency name. The value depends on the value of Accept-Language in the request",
                    "type": "string",
                    "example": "Dollari"
                },
                "symbol": {
                    "title": "Currency symbol.",
                    "type": "string",
                    "example": "$"
                }
            },
            "type": "object",
            "xml": {
                "name": "Currency"
            }
        },
        "Customer": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "currency": {
                    "title": "Customer's preferred currency",
                    "$ref": "#/definitions/Currency"
                },
                "birthdate": {
                    "title": "Birthdate",
                    "type": "string",
                    "format": "date",
                    "example": [
                        "1970-04-13"
                    ]
                },
                "gender": {
                    "title": "Gender",
                    "$ref": "#/definitions/CustomerGender"
                },
                "id_number": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "favourite_city": {
                    "$ref": "#/definitions/City"
                }
            },
            "type": "object",
            "xml": {
                "name": "Customer"
            }
        },
        "CustomerPreferences": {
            "properties": {
                "newsletter_frequency": {
                    "title": "newsletterFrequency",
                    "description": "How often the customer want to receive a newsletter ?",
                    "$ref": "#/definitions/NewsletterFrequency"
                },
                "newsletter_from_thirdparty": {
                    "title": "newsletterThirdparty",
                    "description": "Does the customer wants newsletters from thirdparty ?",
                    "$ref": "#/definitions/NewsletterThirdparty"
                },
                "interests": {
                    "description": "Customer's interests",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerInterest"
                    }
                },
                "travel_with": {
                    "title": "CustomerTravelWith",
                    "description": "The customer like to travel with:",
                    "$ref": "#/definitions/CustomerTravelWith"
                }
            },
            "type": "object",
            "xml": {
                "name": "CustomerPreferences"
            }
        },
        "Date": {
            "properties": {
                "day": {
                    "type": "string"
                },
                "sold_out": {
                    "type": "boolean"
                },
                "price": {
                    "$ref": "#/definitions/Price"
                },
                "discounted_price": {
                    "$ref": "#/definitions/Price"
                },
                "discount_amount": {
                    "$ref": "#/definitions/Price"
                }
            },
            "type": "object",
            "xml": {
                "name": "Date"
            }
        },
        "Destination": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "verticals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Vertical"
                    }
                },
                "city": {
                    "$ref": "#/definitions/City"
                },
                "saves": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "canonical_url": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "price_range": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "address": {
                    "type": "string"
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DestinationPhoto"
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DestinationComment"
                    }
                },
                "opening_hours": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specialities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rating": {
                    "type": "number",
                    "format": "float"
                }
            },
            "type": "object",
            "xml": {
                "name": "Destination"
            }
        },
        "DestinationComment": {
            "properties": {
                "author": {
                    "$ref": "#/definitions/DestinationCommentAuthor"
                },
                "title": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "date": {
                    "description": "This value is saved as ISO 8601 string.",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "DestinationComment"
            }
        },
        "DestinationCommentAuthor": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "DestinationCommentAuthor"
            }
        },
        "DestinationOpeningHour": {
            "type": "object",
            "xml": {
                "name": "DestinationOpeningHour"
            }
        },
        "DestinationOpeningHourTimeFrame": {
            "type": "object",
            "xml": {
                "name": "DestinationOpeningHourTimeFrame"
            }
        },
        "DestinationPhoto": {
            "properties": {
                "url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "DestinationPhoto"
            }
        },
        "EditorialCategory": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sub_title": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "min_events_for_filtering": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "EditorialCategory"
            }
        },
        "ReviewsAggregatedInfo": {
            "properties": {
                "1": {
                    "type": "integer"
                },
                "2": {
                    "type": "integer"
                },
                "3": {
                    "type": "integer"
                },
                "4": {
                    "type": "integer"
                },
                "5": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Event": {
            "properties": {
                "max_confirmation_time": {
                    "type": "string"
                },
                "cutoff_time": {
                    "type": "string"
                },
                "seller_gateway": {
                    "$ref": "#/definitions/SellerGateway"
                },
                "uuid": {
                    "description": "Event unique identifier",
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/City"
                },
                "saves": {
                    "description": "Number of customer who saved this city as favorite",
                    "type": "integer"
                },
                "supplier_code": {
                    "description": "Supplier identification code.",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "relevance": {
                    "type": "integer"
                },
                "emergency_phone_number": {
                    "type": "string"
                },
                "relevance_venue": {
                    "type": "integer"
                },
                "must_see": {
                    "type": "boolean"
                },
                "last_chance": {
                    "type": "boolean"
                },
                "top_seller": {
                    "type": "boolean"
                },
                "print_voucher": {
                    "description": "Voucher must be printed to access the activity",
                    "type": "boolean"
                },
                "temporary": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "about_markdown": {
                    "type": "string"
                },
                "about_html": {
                    "type": "string"
                },
                "meeting_point": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "validity": {
                    "type": "string"
                },
                "numbered_seats": {
                    "type": "boolean"
                },
                "has_price_info_on_date": {
                    "description": "If true the call GET /events/{id}/dates returns prices for each day.",
                    "type": "boolean"
                },
                "open": {
                    "description": "Define if the Event is with open dates entrance (aka: Event::isOpenTicket).",
                    "type": "boolean"
                },
                "ticket_not_included": {
                    "type": "boolean"
                },
                "likely_to_sell_out": {
                    "type": "boolean"
                },
                "special_offer": {
                    "type": "boolean"
                },
                "exclusive": {
                    "type": "boolean"
                },
                "included_hotel_night_number": {
                    "type": "integer"
                },
                "green_fee_days": {
                    "type": "integer"
                },
                "daily": {
                    "description": "Define if the Event is with \"daily tickets\" (aka: Event::getDailyTickets)\nThis causes for example: to hide \"time block\" in Orderbox.",
                    "type": "boolean"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TranslatedMetadata"
                    }
                },
                "group_size": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "food": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TranslatedMetadata"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TranslatedMetadata"
                    }
                },
                "translated": {
                    "type": "boolean"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TranslatedMetadata"
                    }
                },
                "highlights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "included": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "not_included": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_available_today": {
                    "type": "boolean"
                },
                "is_available_tomorrow": {
                    "type": "boolean"
                },
                "has_multiple_options": {
                    "type": "boolean"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "extra_media_url": {
                    "type": "string"
                },
                "retail_price": {
                    "$ref": "#/definitions/Price"
                },
                "net_price": {
                    "$ref": "#/definitions/Price"
                },
                "bundled_price": {
                    "$ref": "#/definitions/Price"
                },
                "discount": {
                    "type": "integer"
                },
                "bucket": {
                    "$ref": "#/definitions/Bucket"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                },
                "reviews_number": {
                    "type": "integer"
                },
                "reviews_avg": {
                    "type": "number",
                    "format": "float"
                },
                "reviews_aggregated_info": {
                    "type": "object",
                    "$ref": "#/definitions/ReviewsAggregatedInfo"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "url": {
                    "type": "string"
                },
                "agency_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "agency_price": {
                    "$ref": "#/definitions/Price"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "flavours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Flavour"
                    }
                },
                "verticals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Vertical"
                    }
                },
                "order_box_elements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "giftable": {
                    "type": "boolean"
                },
                "has_passenger_info": {
                    "type": "boolean"
                },
                "has_extra_customer_data": {
                    "type": "boolean"
                },
                "buy_multiplier": {
                    "type": "integer"
                },
                "status": {
                    "description": "\n     * ONLINE: The actiity is visible on musement.com and it can be booked\n     * ARCHIVED: The actiity is visible on musement.com but it cannot be booked\n     * INACTIVE: The actiity is not visible on musement.com",
                    "type": "boolean",
                    "enum": [
                        "ONLINE",
                        "ARCHIVED",
                        "INACTIVE"
                    ]
                },
                "total_bookings": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "published_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "operational_days": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Event"
            }
        },
        "ExtendedField": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "xml": {
                "name": "ExtendedField"
            }
        },
        "ExternalLink": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "abstract": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "country_name": {
                    "type": "string"
                },
                "author_name": {
                    "type": "string"
                },
                "author_url": {
                    "type": "string"
                },
                "author_avatar_image_url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "ExternalLink"
            }
        },
        "FeedbackRequest": {
            "properties": {
                "nonce": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "event": {
                    "$ref": "#/definitions/Event"
                }
            },
            "type": "object",
            "xml": {
                "name": "CommentRequest"
            }
        },
        "Flavour": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "img": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Flavour"
            }
        },
        "GalleryMedia": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "external_identifier": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "GalleryMedia"
            }
        },
        "GenericEvent": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "verticals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Vertical"
                    }
                },
                "where_is": {
                    "type": "string"
                },
                "when_is": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "date": {
                    "type": "string"
                },
                "start_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "end_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "temporary": {
                    "type": "boolean"
                },
                "price": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "votes": {
                    "type": "integer"
                },
                "city": {
                    "$ref": "#/definitions/City"
                },
                "venue": {
                    "$ref": "#/definitions/Venue"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GalleryMedia"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "GenericEvent"
            }
        },
        "GiftProduct": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "redeem_url": {
                    "description": "for example: '/us/some_city/some_event-123/?gift_hash=abc123&gift_code=CDE432' - when user is redirected to this Event page he will see \"Free Gift\" and \"Gift redeem Orderbox\" with 0 price etc page where he can pick Date for his Gift",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "gift_product"
            }
        },
        "GiftSchedule": {
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GiftScheduleFeature"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "GiftSchedule"
            }
        },
        "GiftScheduleFeature": {
            "properties": {
                "feature_code": {
                    "type": "string"
                },
                "name": {
                    "description": "Name (label) of Feature.",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GiftScheduleProduct"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "GiftScheduleFeature"
            }
        },
        "GiftScheduleProduct": {
            "properties": {
                "holder_code": {
                    "type": "string"
                },
                "name": {
                    "description": "Name (label) of Holder.",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "min_buy": {
                    "type": "integer"
                },
                "max_buy": {
                    "type": "integer"
                },
                "availability": {
                    "type": "integer"
                },
                "raw_price": {
                    "description": "This is the price to the user without any discount applied. (same currency as retailPrice)",
                    "$ref": "#/definitions/Price"
                },
                "discount_amount": {
                    "description": "Amount of discount in same currency as retailPrice (only SeatPrice.discount used because its not in Cart)",
                    "$ref": "#/definitions/Price"
                },
                "retail_price": {
                    "description": "Price with discount applied (only SeatPrice.discount used because its not in Cart)",
                    "$ref": "#/definitions/Price"
                },
                "service_fee": {
                    "$ref": "#/definitions/Price"
                }
            },
            "type": "object",
            "xml": {
                "name": "ScheduleProduct"
            }
        },
        "GiftCard": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "valid_from": {
                    "type": "string",
                    "format": "date-time"
                },
                "valid_until": {
                    "type": "string",
                    "format": "date-time"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "type": "object",
            "xml": {
                "name": "GiftCard"
            }
        },
        "Giftbox": {
            "properties": {
                "redeem_code": {
                    "type": "string"
                },
                "finite_state": {
                    "type": "string"
                },
                "api_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "cover_image": {
                    "type": "string"
                },
                "final_price": {
                    "$ref": "#/definitions/Price"
                },
                "discount_amount": {
                    "$ref": "#/definitions/Price"
                },
                "service_fee": {
                    "$ref": "#/definitions/Price"
                },
                "giftbox_type": {
                    "$ref": "#/definitions/GiftboxType"
                },
                "customization_info": {
                    "$ref": "#/definitions/GiftboxCustomizationInfo"
                },
                "type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Giftbox"
            }
        },
        "GiftboxCustomizationInfo": {
            "properties": {
                "cover_image_url": {
                    "type": "string"
                },
                "donor_name": {
                    "type": "string"
                },
                "recipient_email": {
                    "type": "string"
                },
                "recipient_name": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "giftbox_customization_info"
            }
        },
        "GiftboxType": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "relevance": {
                    "type": "integer"
                },
                "level": {
                    "$ref": "#/definitions/GiftboxTypeLevel"
                },
                "price": {
                    "$ref": "#/definitions/Price"
                },
                "vertical": {
                    "$ref": "#/definitions/Vertical"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extended_description": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "seo_title": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "giftbox_type"
            }
        },
        "GiftboxTypeItem": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "giftbox_type_price": {
                    "$ref": "#/definitions/Price"
                },
                "number_of_people": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "reviews_number": {
                    "type": "integer"
                },
                "reviews_avg": {
                    "type": "number",
                    "format": "float"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "url": {
                    "type": "string"
                },
                "verticals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Vertical"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Category"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "giftbox_type_item"
            }
        },
        "GiftboxTypeLevel": {
            "properties": {
                "label": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "giftbox_type_level"
            }
        },
        "ListType": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "ListType"
            }
        },
        "MultiSearchResultTextHint": {
            "type": "object",
            "xml": {
                "name": "MultiSearchResultTextHint"
            }
        },
        "ListItemsCount": {
            "properties": {
                "musement": {
                    "type": "integer"
                },
                "thirdparty": {
                    "type": "integer"
                },
                "generic": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ListItem": {
            "required": [
                "public_type",
                "title"
            ],
            "properties": {
                "public_type": {
                    "description": "List item public type",
                    "type": "string"
                },
                "title": {
                    "description": "Item title",
                    "type": "string"
                }
            },
            "type": "object",
            "discriminator": "public_type"
        },
        "MusementList": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "subtitle": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "seo_title": {
                    "type": "string"
                },
                "seo_description": {
                    "type": "string"
                },
                "temporary": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Customer"
                    }
                },
                "views": {
                    "type": "integer"
                },
                "scroll": {
                    "type": "integer"
                },
                "saves": {
                    "type": "integer"
                },
                "list_type": {
                    "$ref": "#/definitions/ListType"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MusementListMusementItem"
                    }
                },
                "items_count": {
                    "type": "object",
                    "$ref": "#/definitions/ListItemsCount"
                },
                "city": {
                    "$ref": "#/definitions/City"
                },
                "category": {},
                "cover_image_url": {
                    "type": "string"
                },
                "verticals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Vertical"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "MusementList"
            }
        },
        "MusementListGenericItem": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "public_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "generic_event": {
                    "$ref": "#/definitions/GenericEvent"
                }
            },
            "type": "object",
            "xml": {
                "name": "MusementListGenericItem"
            },
            "allOf": [
                {
                    "$ref": "#/definitions/MusementList"
                }
            ]
        },
        "MusementListMusementItem": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "public_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "event": {
                    "$ref": "#/definitions/Event"
                }
            },
            "type": "object",
            "xml": {
                "name": "MusementListMusementItem"
            }
        },
        "MusementListThirdpartyItem": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "public_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/definitions/Destination"
                }
            },
            "type": "object",
            "xml": {
                "name": "MusementListThirdpartyItem"
            },
            "allOf": [
                {
                    "$ref": "#/definitions/MusementList"
                }
            ]
        },
        "Order": {
            "properties": {
                "identifier": {
                    "description": "Order unique internal identifier",
                    "type": "string"
                },
                "uuid": {
                    "description": "Order unique identifier",
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "trustpilot_url": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderItem"
                    }
                },
                "total_price": {
                    "$ref": "#/definitions/Price"
                },
                "supplier_total_price": {
                    "$ref": "#/definitions/Price"
                },
                "affiliate_id": {
                    "type": "integer"
                },
                "promo_codes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PromoCode"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "Order"
            }
        },
        "OrderItem": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "$ref": "#/definitions/Price"
                },
                "supplier_total_price": {
                    "$ref": "#/definitions/Price"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "PENDING",
                        "REFUNDED",
                        "OK",
                        "KO"
                    ]
                },
                "vouchers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "OrderItem"
            }
        },
        "Page": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "page_category": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PageLink"
                    }
                },
                "path": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "published_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "Page"
            }
        },
        "PageLink": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "PageLink"
            }
        },
        "PassengerInfo": {
            "properties": {
                "salutation": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "date_of_birth": {
                    "title": "date_of_birth",
                    "type": "string",
                    "format": "date-time"
                },
                "passport": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "passport_expiry_date": {
                    "title": "passport_expiry_date",
                    "type": "string",
                    "format": "date-time"
                },
                "nationality": {
                    "type": "string"
                },
                "medical_notes": {
                    "title": "medical_note",
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "fan_card": {
                    "description": "/**",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "PassengerInfo"
            }
        },
        "Price": {
            "properties": {
                "currency": {
                    "type": "string"
                },
                "value": {
                    "type": "number",
                    "format": "float"
                },
                "formatted_value": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Price"
            }
        },
        "Pricetag": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "price_feature": {
                    "type": "string"
                },
                "ticket_holder": {
                    "type": "string"
                },
                "price_feature_code": {
                    "type": "string"
                },
                "ticket_holder_code": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Pricetag"
            }
        },
        "Product": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "final_price": {
                    "$ref": "#/definitions/Price"
                },
                "discount_amount": {
                    "$ref": "#/definitions/Price"
                },
                "service_fee": {
                    "$ref": "#/definitions/Price"
                },
                "id": {
                    "description": "This is a unique identifier of the product. For Musement's product this is the SeatPriceId\nfor 3rd party product is the unique identifier of the partner's product.\n\nPlease note that this is a string",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "datetime": {
                    "type": "string",
                    "format": "date-time"
                },
                "ticket_holder": {
                    "type": "string"
                },
                "price_feature": {
                    "type": "string"
                },
                "activity": {
                    "$ref": "#/definitions/Event"
                },
                "supplier_price": {
                    "$ref": "#/definitions/Price"
                },
                "extended_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtendedField"
                    }
                },
                "tourist_category": {
                    "type": "string"
                },
                "activity_name": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Product"
            }
        },
        "PromoCode": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "percentage": {
                    "type": "boolean"
                },
                "discount": {
                    "type": "integer"
                },
                "max_usage": {
                    "type": "integer"
                },
                "valid_from": {
                    "type": "string",
                    "format": "date-time"
                },
                "valid_until": {
                    "type": "string",
                    "format": "date-time"
                },
                "minimum_amount": {
                    "type": "number",
                    "format": "float"
                }
            },
            "type": "object",
            "xml": {
                "name": "PromoCode"
            }
        },
        "PromoIntent": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "cart": {
                    "type": "integer"
                },
                "promo": {
                    "type": "integer"
                },
                "triggering_product": {
                    "type": "string"
                },
                "target_product": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "PromoIntent"
            }
        },
        "Region": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Region"
            }
        },
        "BraintreePaymentRequest": {
            "properties": {
                "order_id": {
                    "type": "integer"
                },
                "nonce": {
                    "description": "Braintree \"nonce\" created on \"client side\". If provided then don't provide \"paymentMethodToken\"."
                },
                "payment_method_token": {
                    "description": "Braintree \"paymentMethodToken\". If provided then don't provide \"nonce\"."
                },
                "client_ip": {
                    "description": "[optional] User IP address for logging purposes.",
                    "type": "string"
                },
                "cardholder_name": {
                    "description": "[optional] Credit card holder name. Required for iOS integration because its missing in \"tokenizeCard\" function there. Include it only if you pass \"nonce\" parameter.",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "BraintreePaymentRequest"
            }
        },
        "CartRequest": {
            "properties": {
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TicketRequest"
                    }
                },
                "customer": {},
                "discount_code": {
                    "title": "discount_code",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "CartRequest"
            }
        },
        "CityRequest": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "CityRequest"
            }
        },
        "CommentRequest": {
            "properties": {
                "locale": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "CommentRequest"
            }
        },
        "CountryRequest": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "CountryRequest"
            }
        },
        "FormField": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GiftCreationProductWithQuantity": {
            "properties": {
                "holder_code": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "GiftCreationProductWithQuantity"
            }
        },
        "GiftCreationRequest": {
            "properties": {
                "event_id": {
                    "type": "integer"
                },
                "donor_name": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "picture_url": {
                    "type": "string"
                },
                "print": {
                    "type": "boolean"
                },
                "recipient_email": {
                    "description": "Optional if print is true.",
                    "type": "string"
                },
                "recipient_name": {
                    "type": "string"
                },
                "feature_code": {
                    "type": "string"
                },
                "products_with_quantities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GiftCreationProductWithQuantity"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "GiftCreationRequest"
            }
        },
        "GiftRedeemRequest": {
            "properties": {
                "date": {
                    "description": "This is optional - for example when open ticket.",
                    "type": "string"
                },
                "time": {
                    "description": "This is optional - for example when open ticket.",
                    "type": "string"
                },
                "language": {
                    "description": "This is optional - when Event doesnt have languages to choose.",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "GiftRedeemRequest"
            }
        },
        "PassengerInfoRequest": {
            "properties": {
                "salutation": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string",
                    "format": "date-time"
                },
                "passport": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "passport_expiry_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "nationality": {
                    "type": "string"
                },
                "medical_notes": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "fan_card": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "PassengerInfoRequest"
            }
        },
        "PaypalPaymentRequest": {
            "properties": {
                "order_id": {
                    "description": "Can be Order.id or Order.uuid.",
                    "type": "string"
                },
                "paypal_payment_id": {
                    "description": "Paypal \"payment id\" obtained on \"client side\".",
                    "type": "string"
                },
                "client_ip": {
                    "description": "[optional] User IP address for logging purposes.",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "PaypalPaymentRequest"
            }
        },
        "ProductRequest": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "ProductRequest"
            }
        },
        "PurchaseExperience": {
            "properties": {
                "locale": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "PurchaseExperience"
            }
        },
        "RecoverPassword": {
            "properties": {
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "RecoverPassword"
            }
        },
        "TicketRequest": {
            "properties": {
                "product": {
                    "$ref": "#/definitions/ProductRequest"
                },
                "quantity": {
                    "type": "integer"
                },
                "passengers_info": {
                    "title": "passengers_info",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PassengerInfoRequest"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "TicketRequest"
            }
        },
        "TicketMetadataRequest": {
            "properties": {
                "language": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "extended_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtendedField"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "TicketMetadataRequest"
            }
        },
        "VerticalRequest": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "VerticalRequest"
            }
        },
        "PaypalPaymentRedirect": {
            "properties": {
                "redirect_url": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "PaypalPaymentRedirect"
            }
        },
        "PaypalSuccessfulPayment": {
            "type": "object",
            "xml": {
                "name": "PaypalSuccessfulPayment"
            }
        },
        "ResponseWithMessage": {
            "type": "object",
            "xml": {
                "name": "ResponseWithMessage"
            }
        },
        "SearchResponse": {
            "type": "object",
            "xml": {
                "name": "SearchResponse"
            }
        },
        "RedirectTo3dSecureCardIssuer": {
            "type": "object",
            "xml": {
                "name": "RedirectTo3dSecureCardIssuer"
            }
        },
        "StoredSourceInfo": {
            "properties": {
                "source_id": {
                    "description": "Id of stored Customer's Source - for example Card or Android Pay.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of Source. For now only \"card\" is supported to be stored.",
                    "type": "string"
                },
                "credit_card_brand": {
                    "description": "In case of Credit Cards its brand name, for example: \"Visa\", \"MasterCard\", \"American Express\", \"Unknown\".",
                    "type": "string"
                },
                "name": {
                    "description": "Name of Source. For example last 4 digits of card: \"1234\".",
                    "type": "string"
                },
                "cardholder_name": {
                    "description": "Name of credit card holder. For example: \"John Yolo\".",
                    "type": "string"
                }
            },
            "xml": {
                "name": "StoredSourceInfo"
            }
        },
        "StripeSuccessfulPayment": {
            "type": "object",
            "xml": {
                "name": "StripeSuccessfulPayment"
            }
        },
        "Wish": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "item_id": {
                    "type": "integer"
                },
                "item_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/City"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                }
            },
            "type": "object",
            "xml": {
                "name": "Wish"
            }
        },
        "Review": {
            "properties": {
                "locale": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "picture": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "sent_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "approved_at": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "type": "object",
            "xml": {
                "name": "Review"
            }
        },
        "Schedule": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleGroup"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "Schedule"
            }
        },
        "ScheduleGroup": {
            "properties": {
                "feature_code": {
                    "type": "string"
                },
                "name": {
                    "description": "Name (label) of Feature.",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleSlot"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "ScheduleGroup"
            }
        },
        "ScheduleProduct": {
            "properties": {
                "holder_code": {
                    "type": "string"
                },
                "name": {
                    "description": "Name (label) of Holder.",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "min_buy": {
                    "type": "integer"
                },
                "max_buy": {
                    "type": "integer"
                },
                "availability": {
                    "type": "integer"
                },
                "raw_price": {
                    "description": "This is the price to the user without any discount applied. (same currency as retailPrice)",
                    "$ref": "#/definitions/Price"
                },
                "discount_amount": {
                    "description": "Amount of discount in same currency as retailPrice (only SeatPrice.discount used because its not in Cart)",
                    "$ref": "#/definitions/Price"
                },
                "retail_price": {
                    "description": "Price with discount applied (only SeatPrice.discount used because its not in Cart)",
                    "$ref": "#/definitions/Price"
                },
                "service_fee": {
                    "$ref": "#/definitions/Price"
                }
            },
            "type": "object",
            "xml": {
                "name": "ScheduleProduct"
            }
        },
        "ScheduleSlot": {
            "properties": {
                "time": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TranslatedMetadata"
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleProduct"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "ScheduleSlot"
            }
        },
        "SearchResultMetaData": {
            "properties": {
                "count": {
                    "description": "Total search results items",
                    "type": "integer"
                },
                "match_type": {
                    "description": "If the search query string correspond to an exact match, indicates the exact match type: city, country or venue",
                    "type": "string",
                    "enum": [
                        "cities",
                        "countries",
                        "venues"
                    ]
                },
                "match_names": {
                    "description": "If the search query string correspond to an exact match, this will contain the name of the exactly matched country, city or venue",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "match_ids": {
                    "description": "If the search query string correspond to an exact match, this will contain the identifier of the exactly matched country, city or venue",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "SearchResultMetaData"
            }
        },
        "SearchResultTextHint": {
            "type": "object",
            "xml": {
                "name": "SearchResultTextHint"
            }
        },
        "SeatPrice": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "event": {
                    "$ref": "#/definitions/Event"
                },
                "price_tag": {
                    "$ref": "#/definitions/Pricetag"
                },
                "max_buy": {
                    "description": "Maximum purchasable quantity.",
                    "type": "integer"
                },
                "min_buy": {
                    "description": "Minimum purchasable quantity.",
                    "type": "integer"
                },
                "retail_price": {
                    "description": "Price paid by the customer. RetailPriceSupplier - Discount.",
                    "$ref": "#/definitions/Price"
                },
                "supplier_price": {
                    "description": "Price we pay to the supplier.",
                    "$ref": "#/definitions/Price"
                },
                "discount_amount": {
                    "description": "Discount amount.",
                    "$ref": "#/definitions/Price"
                },
                "service_fee": {
                    "description": "Service fee. Always included in the retailPrice. Show it to the user is a decisione of the client application.",
                    "$ref": "#/definitions/Price"
                },
                "datetime": {
                    "type": "integer"
                },
                "retail_price_supplier": {
                    "description": "Price the supplier wants for customers. If no discount is equal to retail price."
                }
            },
            "type": "object",
            "xml": {
                "name": "SeatPrice"
            }
        },
        "SellerGateway": {
            "description": "The API integration that handles final purchase details for the activity.",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "SellerGateway"
            }
        },
        "Supplier": {
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "confirmation_token": {},
                "first_name": {},
                "last_name": {},
                "company_legal_name": {},
                "email": {},
                "contact_phone_number": {},
                "support_email": {},
                "company_name": {},
                "contact_name": {},
                "website": {},
                "country_code": {},
                "address": {},
                "zip_code": {},
                "city": {},
                "tax_id": {},
                "default_currency": {},
                "logo_url": {}
            },
            "type": "object",
            "xml": {
                "name": "Supplier"
            }
        },
        "Tag": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Tag"
            }
        },
        "Ticket": {
            "properties": {
                "uuid": {
                    "description": "Ticket unique identifier",
                    "type": "string"
                },
                "cart_id": {
                    "type": "integer"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "code": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "$ref": "#/definitions/Price"
                },
                "supplier_total_price": {
                    "$ref": "#/definitions/Price"
                },
                "bundle": {},
                "passengers_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PassengerInfo"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/TicketMetadata"
                },
                "status": {
                    "type": "string"
                },
                "vouchers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "Ticket"
            }
        },
        "TicketCode": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "custom_text": {},
                "internal": {
                    "type": "boolean"
                },
                "endpoint": {},
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "expires_at": {}
            },
            "type": "object",
            "xml": {
                "name": "TicketCode"
            }
        },
        "TicketMetadata": {
            "properties": {
                "language": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "extended_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "TicketMetadata"
            }
        },
        "Timeslot": {
            "properties": {
                "datetime": {
                    "type": "string",
                    "format": "date-time"
                },
                "availability": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "Timeslot"
            }
        },
        "TimeslotProduct": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "event": {
                    "$ref": "#/definitions/Event"
                },
                "price_tag": {
                    "$ref": "#/definitions/Pricetag"
                },
                "max_buy": {
                    "description": "Maximum purchasable quantity.",
                    "type": "integer"
                },
                "min_buy": {
                    "description": "Minimum purchasable quantity.",
                    "type": "integer"
                },
                "retail_price": {
                    "description": "Price paid by the customer. RetailPriceSupplier - Discount.",
                    "$ref": "#/definitions/Price"
                },
                "supplier_price": {
                    "description": "Price we pay to the supplier.",
                    "$ref": "#/definitions/Price"
                },
                "discount_amount": {
                    "description": "Discount amount.",
                    "$ref": "#/definitions/Price"
                },
                "service_fee": {
                    "description": "Service fee. Always included in the retailPrice. Show it to the user is a decisione of the client application.",
                    "$ref": "#/definitions/Price"
                },
                "datetime": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TranslatedMetadata": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "extra": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "TranslatedMetadata"
            }
        },
        "Venue": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "city": {
                    "$ref": "#/definitions/City"
                },
                "tips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VenueTip"
                    }
                },
                "name": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "headline": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "reviews_number": {
                    "type": "integer"
                },
                "reviews_avg": {
                    "type": "number",
                    "format": "float"
                },
                "relevance": {
                    "type": "integer"
                },
                "abstract": {
                    "type": "string"
                },
                "description": {
                    "description": "Note this field called description is the venue content (as on i8n entity).",
                    "type": "string"
                },
                "description_html": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                },
                "verticals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Vertical"
                    }
                },
                "cover_image_url": {
                    "type": "string"
                },
                "events_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "show_calendar": {
                    "type": "boolean"
                },
                "show_flavours_filter": {
                    "type": "boolean"
                },
                "show_filters_when_events_count": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "Venue"
            }
        },
        "VenueTip": {
            "properties": {
                "text": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "VenueTip"
            }
        },
        "Vertical": {
            "required": [
                "id",
                "name",
                "active",
                "code",
                "slug",
                "relevance",
                "url"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "top_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                },
                "relevance": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "Vertical"
            }
        },
        "VerticalAggregated": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "cover_image_url": {
                    "type": "string"
                },
                "top_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                },
                "relevance": {
                    "type": "integer"
                }
            },
            "type": "object",
            "xml": {
                "name": "VerticalAggregated"
            }
        },
        "Widget": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "type": "object",
            "xml": {
                "name": "Widget"
            }
        },
        "WidgetConfiguration": {
            "properties": {
                "widget_type": {
                    "type": "string"
                },
                "modal": {
                    "type": "boolean"
                },
                "entity_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_type": {
                    "type": "string"
                },
                "custom_css": {
                    "type": "string"
                },
                "steps": {
                    "$ref": "#/definitions/WidgetConfigurationSteps"
                }
            },
            "type": "object",
            "xml": {
                "name": "WidgetConfiguration"
            }
        },
        "WidgetConfigurationStepCalendarBox": {
            "properties": {
                "calendar_type": {
                    "type": "string"
                },
                "flow": {
                    "type": "string"
                },
                "custom_title": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "WidgetConfigurationStepCalendarBox"
            }
        },
        "WidgetConfigurationStepCoverBox": {
            "properties": {
                "title": {
                    "type": "boolean"
                },
                "reviews": {
                    "type": "boolean"
                },
                "price": {
                    "type": "boolean"
                },
                "discount": {
                    "type": "boolean"
                },
                "mobile_voucher": {
                    "type": "boolean"
                },
                "custom_cta_text": {
                    "type": "string"
                },
                "custom_title": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "WidgetConfigurationStepCoverBox"
            }
        },
        "WidgetConfigurationSteps": {
            "properties": {
                "step_cover_box": {
                    "$ref": "#/definitions/WidgetConfigurationStepCoverBox"
                },
                "step_calendar_box": {
                    "$ref": "#/definitions/WidgetConfigurationStepCalendarBox"
                }
            },
            "type": "object",
            "xml": {
                "name": "WidgetConfigurationStep"
            }
        },
        "DeeplinkAugmented": {
            "properties": {
                "resource": {
                    "description": "Resource data serialized",
                    "type": "string"
                },
                "regions": {
                    "description": "Active regions for the resource",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                }
            }
        },
        "EventAugmented": {
            "properties": {
                "is_hero": {
                    "description": "Is hero ?",
                    "type": "boolean"
                }
            }
        }
    },
    "parameters": {
        "Accept-Language": {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "en-US"
        },
        "X-Musement-Currency": {
            "name": "X-Musement-Currency",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "USD"
        },
        "X-Musement-Version": {
            "name": "X-Musement-Version",
            "in": "header",
            "required": false,
            "type": "string"
        },
        "X-Musement-Device-Type": {
            "name": "X-Musement-Device-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "enum": [
                "DESKTOP",
                "MOBILE"
            ]
        },
        "limit": {
            "name": "limit",
            "in": "query",
            "description": "Max number of items in the response",
            "required": false,
            "type": "integer",
            "default": 10,
            "maximum": 100
        },
        "in": {
            "name": "in",
            "in": "query",
            "description": "Filter result by ones in the given set of ids",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "offset": {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset",
            "required": false,
            "type": "integer",
            "default": 0
        },
        "page": {
            "name": "page",
            "in": "query",
            "description": "Page from which starting to return found events (mandatory if limit is given)",
            "required": false,
            "type": "integer"
        },
        "sort_by": {
            "name": "sort_by",
            "in": "query",
            "description": "Ordering criteria to apply, prepend `-` for descending order",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "vertical": {
            "name": "vertical",
            "in": "query",
            "description": "Vertical identifier",
            "required": false,
            "type": "integer"
        },
        "vertical_in": {
            "name": "vertical_in",
            "in": "query",
            "description": "Filter, include only results from given verticals identified by a collection of ids",
            "required": false,
            "type": "array",
            "items": {
                "type": "integer"
            },
            "collectionFormat": "csv"
        },
        "city": {
            "name": "city",
            "in": "query",
            "description": "City identifier",
            "required": false,
            "type": "integer"
        },
        "venue": {
            "name": "venue",
            "in": "query",
            "description": "Venue identifier",
            "required": false,
            "type": "integer"
        },
        "editorial-category": {
            "name": "editorial-category",
            "in": "query",
            "description": "Editorial category identifier",
            "required": false,
            "type": "integer"
        },
        "category": {
            "name": "category",
            "in": "query",
            "description": "Category identifier",
            "required": false,
            "type": "integer"
        },
        "locale": {
            "name": "locale",
            "in": "query",
            "description": "Locale code",
            "required": false,
            "type": "string"
        },
        "min_rating": {
            "name": "min_rating",
            "in": "query",
            "description": "Minimum rating",
            "required": false,
            "type": "integer"
        },
        "vertical_collection": {
            "name": "vertical_collection",
            "in": "query",
            "description": "List of verticals",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "category_collection": {
            "name": "category_collection",
            "in": "query",
            "description": "List of categories",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "country_collection": {
            "name": "country_collection",
            "in": "query",
            "description": "List of countries",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "city_collection": {
            "name": "city_collection",
            "in": "query",
            "description": "List of cities",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "date_from": {
            "name": "date_from",
            "in": "query",
            "description": "Start date | Use format: YYYY-MM-DD",
            "required": false,
            "type": "string"
        },
        "date_to": {
            "name": "date_to",
            "in": "query",
            "description": "To date | Use format: YYYY-MM-DD",
            "required": false,
            "type": "string"
        },
        "exclude_not_tagged": {
            "name": "exclude_not_tagged",
            "in": "query",
            "description": "If true will return only tagged lists (with at least one tag), otherwise will return also untagged lists (with no tags)",
            "type": "boolean",
            "default": false
        },
        "temporary": {
            "name": "temporary",
            "in": "query",
            "description": "Filter, include results on an temporary flag basis",
            "required": false,
            "type": "boolean"
        },
        "now_open": {
            "name": "now_open",
            "in": "query",
            "description": "Filter, include events that are actually open when set",
            "required": false,
            "type": "boolean"
        },
        "country_in": {
            "name": "country_in",
            "in": "query",
            "description": "Filter, include only results from at least one of the given countries identified by a collection of ids",
            "required": false,
            "type": "array",
            "items": {
                "type": "integer"
            },
            "collectionFormat": "csv"
        },
        "category_in": {
            "name": "category_in",
            "in": "query",
            "description": "Filter, include only results from at least one of the given categories identified by a collection of ids",
            "required": false,
            "type": "array",
            "items": {
                "type": "integer"
            },
            "collectionFormat": "csv"
        },
        "feature_in": {
            "name": "feature_in",
            "in": "query",
            "description": "Filter, include only results having at least one of the given features identified by a collection of codes",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "city_in": {
            "name": "city_in",
            "in": "query",
            "description": "Filter, include only results from at least one of the given cities identified by a collection of ids",
            "required": false,
            "type": "array",
            "items": {
                "type": "integer"
            },
            "collectionFormat": "csv"
        },
        "not_city_in": {
            "name": "not_city_in",
            "in": "query",
            "description": "Filter, exclude results from given cities identified by a collection of ids",
            "required": false,
            "type": "array",
            "items": {
                "type": "integer"
            },
            "collectionFormat": "csv"
        },
        "max_distance": {
            "name": "max_distance",
            "in": "query",
            "description": "Maximum distance expressed with its unit from a given point coordinates expressed in decimal grades, accepts kilometers and miles. E.G.: 44.12233|12.23233|100KM or 44.12233|12.23233|62M",
            "required": false,
            "type": "string"
        },
        "number_of_people": {
            "name": "number_of_people",
            "in": "query",
            "description": "Number of people",
            "required": false,
            "type": "integer"
        },
        "text": {
            "name": "text",
            "in": "query",
            "description": "Text to search",
            "required": false,
            "type": "string"
        },
        "text_operator": {
            "name": "text_operator",
            "in": "query",
            "description": "Default set to 'AUTO' represents text operator, if 'AND' results will contains all of the words, if 'OR' at least one, if 'AUTO' performs a 'AND' search first and an 'OR' then",
            "required": false,
            "type": "string"
        },
        "zero_terms_query": {
            "name": "zero_terms_query",
            "in": "query",
            "description": "Default set to 'NONE', if set to 'ALL', if all of the stop words have been removed, search will be performed, if set to 'NONE' will not",
            "required": false,
            "type": "string"
        },
        "fuzziness_level": {
            "name": "fuzziness_level",
            "in": "query",
            "description": "Level of fuzziness (default value 'LEVEL-0', accepted values [AUTO|LEVEL-0|LEVEL-1|LEVEL-2]",
            "required": false,
            "type": "string"
        },
        "extend_other_languages": {
            "name": "extend_other_languages",
            "in": "query",
            "description": "Default value 'AUTO', if set to 'YES' will extend the search to other language than the one specified in headers, if set to 'AUTO' will do this automatically on 0 results",
            "required": false,
            "type": "string"
        },
        "extend_content_fields": {
            "name": "extend_content_fields",
            "in": "query",
            "description": "Default value 'AUTO', if set to 'YES' will extend the search to other textual field other than the title, if set to 'AUTO' will do this automatically on 0 results",
            "required": false,
            "type": "string"
        },
        "minimum_events": {
            "name": "minimum_events",
            "in": "query",
            "description": "Minimum number of active events that must belong to the container subject, default 1",
            "required": false,
            "type": "integer"
        },
        "activity_limit": {
            "name": "activity_limit",
            "in": "query",
            "description": "Maximum number of activities to return",
            "required": false,
            "type": "integer"
        },
        "blog_post_limit": {
            "name": "blog_post_limit",
            "in": "query",
            "description": "Maximum number of blog posts to return",
            "required": false,
            "type": "integer"
        },
        "category_limit": {
            "name": "category_limit",
            "in": "query",
            "description": "Maximum number of categories to return",
            "required": false,
            "type": "integer"
        },
        "city_limit": {
            "name": "city_limit",
            "in": "query",
            "description": "Maximum number of cities to return",
            "required": false,
            "type": "integer"
        },
        "list_limit": {
            "name": "list_limit",
            "in": "query",
            "description": "Maximum number of lists to return",
            "required": false,
            "type": "integer"
        },
        "venue_limit": {
            "name": "venue_limit",
            "in": "query",
            "description": "Maximum number of venues to return",
            "required": false,
            "type": "integer"
        },
        "activity_offset": {
            "name": "activity_offset",
            "in": "query",
            "description": "Offset for activities to return",
            "required": false,
            "type": "integer"
        },
        "blog_post_offset": {
            "name": "blog_post_offset",
            "in": "query",
            "description": "Offset for blog posts to return",
            "required": false,
            "type": "integer"
        },
        "category_offset": {
            "name": "category_offset",
            "in": "query",
            "description": "Offset for categories to return",
            "required": false,
            "type": "integer"
        },
        "city_offset": {
            "name": "city_offset",
            "in": "query",
            "description": "Offset for cities to return",
            "required": false,
            "type": "integer"
        },
        "list_offset": {
            "name": "list_offset",
            "in": "query",
            "description": "Offset for lists to return",
            "required": false,
            "type": "integer"
        },
        "venue_offset": {
            "name": "venue_offset",
            "in": "query",
            "description": "Offset for venues to return",
            "required": false,
            "type": "integer"
        },
        "max_distance_from_city": {
            "name": "max_distance_from_city",
            "in": "query",
            "description": "Maximum distance expressed with its unit from a given city id, accepts kilometers and miles. E.G.: 231|100KM or 51234|12.23233|62M",
            "required": false,
            "type": "string"
        },
        "listtags": {
            "name": "listtags",
            "in": "query",
            "description": "List of tags to filter by. A collection of tags",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "listtypes": {
            "name": "listtypes",
            "in": "query",
            "description": "List type to filter by. A collection of list type",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "giftCode": {
            "name": "giftCode",
            "in": "path",
            "description": "Gift code",
            "required": true,
            "type": "string"
        },
        "cartId": {
            "name": "cartId",
            "in": "path",
            "description": "Cart identifier",
            "required": true,
            "type": "integer"
        },
        "categoryId": {
            "name": "categoryId",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "type": "integer"
        },
        "verticalId": {
            "name": "verticalId",
            "in": "path",
            "description": "Vertical identifier",
            "required": true,
            "type": "integer"
        },
        "eventId": {
            "name": "eventId",
            "in": "path",
            "description": "Event identifier",
            "required": true,
            "type": "integer"
        },
        "activityUuid": {
            "name": "activityUuid",
            "in": "path",
            "description": "Activity identifier",
            "required": true,
            "type": "string"
        },
        "cartUuid": {
            "name": "cartUuid",
            "in": "path",
            "description": "Cart identifier",
            "required": true,
            "type": "string"
        },
        "cartItemUuid": {
            "name": "cartItemUuid",
            "in": "path",
            "description": "Cart item identifier",
            "required": true,
            "type": "string"
        },
        "passengerNumber": {
            "name": "passengerNumber",
            "in": "path",
            "description": "Passenger number",
            "required": true,
            "type": "string"
        },
        "editorialcategoryId": {
            "name": "editorialcategoryId",
            "in": "path",
            "description": "Editorial category identifier",
            "required": true,
            "type": "integer"
        },
        "supplierUuid": {
            "name": "supplierUuid",
            "in": "path",
            "description": "Supplier UUID",
            "required": true,
            "type": "string"
        },
        "widgetCode": {
            "name": "widgetCode",
            "in": "path",
            "description": "Widget Code",
            "required": true,
            "type": "string"
        },
        "destinationId": {
            "name": "destinationId",
            "in": "path",
            "description": "Destination identifier",
            "required": true,
            "type": "integer"
        },
        "countryId": {
            "name": "countryId",
            "in": "path",
            "description": "Country identifier",
            "required": true,
            "type": "integer"
        },
        "cityId": {
            "name": "cityId",
            "in": "path",
            "description": "City identifier",
            "required": true,
            "type": "integer"
        },
        "pageId": {
            "name": "pageId",
            "in": "path",
            "description": "Page identifier",
            "required": true,
            "type": "integer"
        },
        "externalLinkId": {
            "name": "externalLinkId",
            "in": "path",
            "description": "External link identifier",
            "required": true,
            "type": "integer"
        },
        "venueId": {
            "name": "venueId",
            "in": "path",
            "description": "Venue identifier",
            "required": true,
            "type": "integer"
        },
        "venue_in": {
            "name": "venue_in",
            "in": "query",
            "description": "Filter, include only results from given verticals identified by a collection of ids",
            "required": false,
            "type": "array",
            "items": {
                "type": "integer"
            },
            "collectionFormat": "csv"
        },
        "giftboxTypeCode": {
            "name": "giftboxTypeCode",
            "in": "path",
            "description": "Giftbox identifier",
            "required": true,
            "type": "string"
        },
        "listId": {
            "name": "listId",
            "in": "path",
            "description": "List identifier",
            "required": true,
            "type": "integer"
        },
        "day": {
            "name": "day",
            "in": "path",
            "description": "Day | Use format: YYYY-MM-DD",
            "required": true,
            "type": "string"
        },
        "localeCode": {
            "name": "localeCode",
            "in": "path",
            "description": "Locale code",
            "required": true,
            "type": "string"
        },
        "with_ticket_status": {
            "name": "with_ticket_status",
            "in": "query",
            "description": "Filter, include only results with given ticket status",
            "required": false,
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv"
        },
        "pricetagCode": {
            "name": "pricetagCode",
            "in": "path",
            "description": "Full pricetag code holder and feature seprate by dash | Example 'adult-entrance'",
            "required": true,
            "type": "string"
        },
        "giftboxCode": {
            "name": "giftboxCode",
            "in": "path",
            "description": "Giftbox redeem code",
            "required": true,
            "type": "string"
        },
        "time": {
            "name": "time",
            "in": "path",
            "description": "String containing hours and minutes in the format 'HH-MM' | Example: 22-40",
            "required": true,
            "type": "string"
        },
        "coordinates": {
            "name": "coordinates",
            "in": "query",
            "description": "Coordinates as comma separated longitude and latitude | Example : 45.7386,-9.3641",
            "required": false,
            "type": "string"
        },
        "distance": {
            "name": "distance",
            "in": "query",
            "description": "Distance from given coordinates expressed with an integer followed by unit | KM for kilometers, M for miles | Example: 334KM |Requires the other parameters called 'coordinates' to be set in the same request",
            "required": false,
            "type": "string"
        },
        "default_price_range": {
            "name": "default_price_range",
            "in": "query",
            "description": "Price range as comma separated values, accepts only floats positive or equals to 0, two points precision | Example : 0.00,34.23 | Currency is inferred from X-Musement-Currency header",
            "required": false,
            "type": "string"
        }
    },
    "securityDefinitions": {
        "customer_oauth": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://api.musement.com/api/v3/login",
            "scopes": {
                "customer:read": "Read customer data: profile data, information about the orders",
                "customer:update": "Update customer data: profile data"
            }
        }
    },
    "tags": [
        {
            "name": "timeslot",
            "description": "Activitiy's timeslots"
        },
        {
            "name": "itinerary",
            "description": "Activity's itineraries"
        },
        {
            "name": "Customer",
            "description": "Operations related to the customer. How to register a customer, how access it's data etc."
        }
    ],
    "externalDocs": {
        "description": "Find out more about Musement API",
        "url": "http://musement.gelato.io"
    },
    "x-tagGroups": [
        {
            "name": "Activity",
            "tags": [
                "timeslot",
                "metadata",
                "itinerary",
                "date",
                "media",
                "activity",
                "comment",
                "content",
                "contact-form"
            ]
        },
        {
            "name": "Taxonomy",
            "tags": [
                "category",
                "city",
                "venue",
                "vertical",
                "country",
                "editorial-category"
            ]
        },
        {
            "name": "Blog",
            "tags": [
                "blog"
            ]
        },
        {
            "name": "Orders",
            "tags": [
                "order"
            ]
        },
        {
            "name": "Lists",
            "tags": [
                "list"
            ]
        },
        {
            "name": "Widgets",
            "tags": [
                "widget"
            ]
        },
        {
            "name": "Gifts",
            "tags": [
                "giftbox",
                "gifting"
            ]
        },
        {
            "name": "Global",
            "tags": [
                "global"
            ]
        },
        {
            "name": "Cart",
            "tags": [
                "guest-customer",
                "cart",
                "passengers-info",
                "extra-customer-info"
            ]
        },
        {
            "name": "Supplier",
            "tags": [
                "supplier-registration",
                "supplier-profile",
                "supplier-order",
                "supplier-activity",
                "supplier"
            ]
        },
        {
            "name": "Customer",
            "tags": [
                "customer",
                "customer_preferences"
            ]
        },
        {
            "name": "Payments",
            "tags": [
                "paypal-express",
                "stripe"
            ]
        },
        {
            "name": "Static Pages",
            "tags": [
                "page"
            ]
        }
    ]
}